{"version":3,"file":"commons-a6e140d148bf97e8e9e7.js","mappings":"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","sources":["webpack://thesfnook/./node_modules/camelcase/index.js","webpack://thesfnook/../src/image-utils.ts","webpack://thesfnook/../src/components/hooks.ts","webpack://thesfnook/../src/components/layout-wrapper.tsx","webpack://thesfnook/../src/components/picture.tsx","webpack://thesfnook/../src/components/placeholder.tsx","webpack://thesfnook/../src/components/main-image.tsx","webpack://thesfnook/../src/components/gatsby-image.server.tsx","webpack://thesfnook/../src/components/gatsby-image.browser.tsx","webpack://thesfnook/../src/components/static-image.server.tsx","webpack://thesfnook/../src/components/static-image.tsx","webpack://thesfnook/./src/components/layout/Header.tsx","webpack://thesfnook/./src/components/layout/Layout.tsx","webpack://thesfnook/./node_modules/framer-motion/dist/es/render/components/create-proxy.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","webpack://thesfnook/./node_modules/motion-utils/dist/es/memo.mjs","webpack://thesfnook/./node_modules/motion-dom/dist/es/utils/supports/scroll-timeline.mjs","webpack://thesfnook/./node_modules/motion-dom/dist/es/animation/controls/BaseGroup.mjs","webpack://thesfnook/./node_modules/motion-dom/dist/es/animation/controls/Group.mjs","webpack://thesfnook/./node_modules/motion-dom/dist/es/animation/utils/get-value-transition.mjs","webpack://thesfnook/./node_modules/motion-dom/dist/es/animation/generators/utils/calc-duration.mjs","webpack://thesfnook/./node_modules/motion-dom/dist/es/animation/generators/utils/is-generator.mjs","webpack://thesfnook/./node_modules/motion-dom/dist/es/animation/waapi/utils/attach-timeline.mjs","webpack://thesfnook/./node_modules/motion-dom/dist/es/utils/is-bezier-definition.mjs","webpack://thesfnook/./node_modules/motion-dom/dist/es/utils/supports/flags.mjs","webpack://thesfnook/./node_modules/motion-dom/dist/es/utils/supports/memo.mjs","webpack://thesfnook/./node_modules/motion-dom/dist/es/utils/supports/linear-easing.mjs","webpack://thesfnook/./node_modules/motion-utils/dist/es/progress.mjs","webpack://thesfnook/./node_modules/motion-dom/dist/es/animation/waapi/utils/linear.mjs","webpack://thesfnook/./node_modules/motion-dom/dist/es/animation/waapi/utils/easing.mjs","webpack://thesfnook/./node_modules/motion-dom/dist/es/gestures/drag/state/is-active.mjs","webpack://thesfnook/./node_modules/motion-dom/dist/es/gestures/utils/setup.mjs","webpack://thesfnook/./node_modules/motion-dom/dist/es/utils/resolve-elements.mjs","webpack://thesfnook/./node_modules/motion-dom/dist/es/gestures/hover.mjs","webpack://thesfnook/./node_modules/motion-dom/dist/es/gestures/utils/is-node-or-child.mjs","webpack://thesfnook/./node_modules/motion-dom/dist/es/gestures/utils/is-primary-pointer.mjs","webpack://thesfnook/./node_modules/motion-dom/dist/es/gestures/press/utils/is-keyboard-accessible.mjs","webpack://thesfnook/./node_modules/motion-dom/dist/es/gestures/press/utils/state.mjs","webpack://thesfnook/./node_modules/motion-dom/dist/es/gestures/press/utils/keyboard.mjs","webpack://thesfnook/./node_modules/motion-dom/dist/es/gestures/press/index.mjs","webpack://thesfnook/./node_modules/motion-utils/dist/es/time-conversion.mjs","webpack://thesfnook/./node_modules/motion-utils/dist/es/noop.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/render/html/utils/keys-transform.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/render/html/utils/keys-position.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/frameloop/batcher.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/frameloop/render-step.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/frameloop/frame.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/utils/array.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/value/index.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/render/utils/setters.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/easing/back.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/easing/anticipate.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/easing/circ.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/utils/clamp.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/value/types/utils/sanitize.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/value/types/utils/float-regex.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/value/types/utils/single-color-regex.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/value/types/color/utils.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/value/types/utils/is-nullish.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/value/types/color/hex.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/value/types/color/index.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/value/types/utils/color-regex.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/value/types/complex/index.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/render/dom/value-types/number-browser.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/render/dom/value-types/transform.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","webpack://thesfnook/./node_modules/motion-utils/dist/es/errors.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/utils/mix/number.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/utils/mix/immediate.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/utils/mix/color.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/utils/pipe.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/utils/mix/visibility.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/utils/mix/complex.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/utils/mix/index.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/animation/generators/spring/defaults.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/easing/ease.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/easing/utils/map.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/utils/interpolate.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/utils/offsets/default.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/utils/offsets/time.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/animation/animators/utils/accelerated-values.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-waapi.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/animation/utils/is-transition-defined.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/utils/resolve-value.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/render/utils/get-variant-context.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/motion/features/Feature.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/motion/features/animations.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/events/add-dom-event.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/events/event-info.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/utils/distance.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/projection/geometry/models.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/projection/utils/measure.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/utils/get-context-window.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","webpack://thesfnook/./node_modules/motion-dom/dist/es/gestures/drag/state/set-active.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/gestures/pan/index.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/context/PresenceContext.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/projection/node/state.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/frameloop/microtask.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/utils/delay.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/projection/shared/stack.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/animation/animate/single-value.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/projection/styles/transform.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/motion/features/drag.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/gestures/drag/index.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/gestures/hover.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/gestures/press.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/motion/features/gestures.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/gestures/focus.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/motion/features/layout.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/context/LazyContext.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/utils/is-browser.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/motion/features/definitions.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/motion/index.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/motion/features/load-features.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/utils/use-constant.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/render/html/utils/render.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/render/html/config-motion.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/render/html/use-props.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/render/svg/use-props.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/render/dom/use-render.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/render/components/create-factory.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/render/store.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/render/VisualElement.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs","webpack://thesfnook/./node_modules/framer-motion/dist/es/render/components/motion/create.mjs"],"sourcesContent":["'use strict';\n\nconst UPPERCASE = /[\\p{Lu}]/u;\nconst LOWERCASE = /[\\p{Ll}]/u;\nconst LEADING_CAPITAL = /^[\\p{Lu}](?![\\p{Lu}])/gu;\nconst IDENTIFIER = /([\\p{Alpha}\\p{N}_]|$)/u;\nconst SEPARATORS = /[_.\\- ]+/;\n\nconst LEADING_SEPARATORS = new RegExp('^' + SEPARATORS.source);\nconst SEPARATORS_AND_IDENTIFIER = new RegExp(SEPARATORS.source + IDENTIFIER.source, 'gu');\nconst NUMBERS_AND_IDENTIFIER = new RegExp('\\\\d+' + IDENTIFIER.source, 'gu');\n\nconst preserveCamelCase = (string, toLowerCase, toUpperCase) => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && UPPERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && LOWERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = toLowerCase(character) === character && toUpperCase(character) !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = toUpperCase(character) === character && toLowerCase(character) !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst preserveConsecutiveUppercase = (input, toLowerCase) => {\n\tLEADING_CAPITAL.lastIndex = 0;\n\n\treturn input.replace(LEADING_CAPITAL, m1 => toLowerCase(m1));\n};\n\nconst postProcess = (input, toUpperCase) => {\n\tSEPARATORS_AND_IDENTIFIER.lastIndex = 0;\n\tNUMBERS_AND_IDENTIFIER.lastIndex = 0;\n\n\treturn input.replace(SEPARATORS_AND_IDENTIFIER, (_, identifier) => toUpperCase(identifier))\n\t\t.replace(NUMBERS_AND_IDENTIFIER, m => toUpperCase(m));\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = {\n\t\tpascalCase: false,\n\t\tpreserveConsecutiveUppercase: false,\n\t\t...options\n\t};\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tconst toLowerCase = options.locale === false ?\n\t\tstring => string.toLowerCase() :\n\t\tstring => string.toLocaleLowerCase(options.locale);\n\tconst toUpperCase = options.locale === false ?\n\t\tstring => string.toUpperCase() :\n\t\tstring => string.toLocaleUpperCase(options.locale);\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? toUpperCase(input) : toLowerCase(input);\n\t}\n\n\tconst hasUpperCase = input !== toLowerCase(input);\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input, toLowerCase, toUpperCase);\n\t}\n\n\tinput = input.replace(LEADING_SEPARATORS, '');\n\n\tif (options.preserveConsecutiveUppercase) {\n\t\tinput = preserveConsecutiveUppercase(input, toLowerCase);\n\t} else {\n\t\tinput = toLowerCase(input);\n\t}\n\n\tif (options.pascalCase) {\n\t\tinput = toUpperCase(input.charAt(0)) + input.slice(1);\n\t}\n\n\treturn postProcess(input, toUpperCase);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","import camelCase from \"camelcase\"\nimport type { IGatsbyImageData } from \"./index\"\n\nconst DEFAULT_PIXEL_DENSITIES = [0.25, 0.5, 1, 2]\nexport const DEFAULT_BREAKPOINTS = [750, 1080, 1366, 1920]\nexport const EVERY_BREAKPOINT = [\n  320, 654, 768, 1024, 1366, 1600, 1920, 2048, 2560, 3440, 3840, 4096,\n]\nconst DEFAULT_FLUID_WIDTH = 800\nconst DEFAULT_FIXED_WIDTH = 800\nconst DEFAULT_ASPECT_RATIO = 4 / 3\n\nexport type Fit = \"cover\" | \"fill\" | \"inside\" | \"outside\" | \"contain\"\n\nexport type Layout = \"fixed\" | \"fullWidth\" | \"constrained\"\nexport type ImageFormat = \"jpg\" | \"png\" | \"webp\" | \"avif\" | \"auto\" | \"\"\n\n/**\n * The minimal required reporter, as we don't want to import it from gatsby-cli\n */\nexport interface IReporter {\n  warn(message: string): void\n}\n\nexport interface ISharpGatsbyImageArgs {\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  placeholder?: \"tracedSVG\" | \"dominantColor\" | \"blurred\" | \"none\"\n  tracedSVGOptions?: Record<string, unknown>\n  width?: number\n  height?: number\n  aspectRatio?: number\n  sizes?: string\n  quality?: number\n  transformOptions?: {\n    fit?: Fit\n    cropFocus?: number | string\n    duotone?: {\n      highlight: string\n      shadow: string\n      opacity?: number\n    }\n    grayscale?: boolean\n    rotate?: number\n    trim?: number\n  }\n  jpgOptions?: Record<string, unknown>\n  pngOptions?: Record<string, unknown>\n  webpOptions?: Record<string, unknown>\n  avifOptions?: Record<string, unknown>\n  blurredOptions?: { width?: number; toFormat?: ImageFormat }\n  breakpoints?: Array<number>\n  outputPixelDensities?: Array<number>\n  backgroundColor?: string\n}\n\nexport interface IImageSizeArgs {\n  width?: number\n  height?: number\n  layout?: Layout\n  filename: string\n  outputPixelDensities?: Array<number>\n  breakpoints?: Array<number>\n  fit?: Fit\n  reporter?: IReporter\n  sourceMetadata: { width: number; height: number }\n}\n\nexport interface IImageSizes {\n  sizes: Array<number>\n  presentationWidth: number\n  presentationHeight: number\n  aspectRatio: number\n  unscaledWidth: number\n}\n\nexport interface IImage {\n  src: string\n  width: number\n  height: number\n  format: ImageFormat\n}\n\nexport interface IGatsbyImageHelperArgs {\n  pluginName: string\n  generateImageSource: (\n    filename: string,\n    width: number,\n    height: number,\n    format: ImageFormat,\n    fit?: Fit,\n    options?: Record<string, unknown>\n  ) => IImage\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  filename: string\n  placeholderURL?: string\n  width?: number\n  height?: number\n  sizes?: string\n  reporter?: IReporter\n  sourceMetadata?: { width: number; height: number; format: ImageFormat }\n  fit?: Fit\n  options?: Record<string, unknown>\n  breakpoints?: Array<number>\n  backgroundColor?: string\n  aspectRatio?: number\n}\n\nconst warn = (message: string): void => console.warn(message)\n\nconst sortNumeric = (a: number, b: number): number => a - b\n\nexport const getSizes = (width: number, layout: Layout): string | undefined => {\n  switch (layout) {\n    // If screen is wider than the max size, image width is the max size,\n    // otherwise it's the width of the screen\n    case `constrained`:\n      return `(min-width: ${width}px) ${width}px, 100vw`\n\n    // Image is always the same width, whatever the size of the screen\n    case `fixed`:\n      return `${width}px`\n\n    // Image is always the width of the screen\n    case `fullWidth`:\n      return `100vw`\n\n    default:\n      return undefined\n  }\n}\n\nexport const getSrcSet = (images: Array<IImage>): string =>\n  images.map(image => `${image.src} ${image.width}w`).join(`,\\n`)\n\nexport function formatFromFilename(filename: string): ImageFormat | undefined {\n  const dot = filename.lastIndexOf(`.`)\n  if (dot !== -1) {\n    const ext = filename.slice(dot + 1)\n    if (ext === `jpeg`) {\n      return `jpg`\n    }\n    if (ext.length === 3 || ext.length === 4) {\n      return ext as ImageFormat\n    }\n  }\n  return undefined\n}\n\nexport function setDefaultDimensions(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageHelperArgs {\n  let {\n    layout = `constrained`,\n    width,\n    height,\n    sourceMetadata,\n    breakpoints,\n    aspectRatio,\n    formats = [`auto`, `webp`],\n  } = args\n  formats = formats.map(format => format.toLowerCase() as ImageFormat)\n  layout = camelCase(layout) as Layout\n\n  if (width && height) {\n    return { ...args, formats, layout, aspectRatio: width / height }\n  }\n  if (sourceMetadata.width && sourceMetadata.height && !aspectRatio) {\n    aspectRatio = sourceMetadata.width / sourceMetadata.height\n  }\n\n  if (layout === `fullWidth`) {\n    width = width || sourceMetadata.width || breakpoints[breakpoints.length - 1]\n    height = height || Math.round(width / (aspectRatio || DEFAULT_ASPECT_RATIO))\n  } else {\n    if (!width) {\n      if (height && aspectRatio) {\n        width = height * aspectRatio\n      } else if (sourceMetadata.width) {\n        width = sourceMetadata.width\n      } else if (height) {\n        width = Math.round(height / DEFAULT_ASPECT_RATIO)\n      } else {\n        width = DEFAULT_FIXED_WIDTH\n      }\n    }\n\n    if (aspectRatio && !height) {\n      height = Math.round(width / aspectRatio)\n    } else if (!aspectRatio) {\n      aspectRatio = width / height\n    }\n  }\n  return { ...args, width, height, aspectRatio, layout, formats }\n}\n\n/**\n * Use this for getting an image for the blurred placeholder. This ensures the\n * aspect ratio and crop match the main image\n */\nexport function getLowResolutionImageURL(\n  args: IGatsbyImageHelperArgs,\n  width = 20\n): string {\n  args = setDefaultDimensions(args)\n  const { generateImageSource, filename, aspectRatio } = args\n  return generateImageSource(\n    filename,\n    width,\n    Math.round(width / aspectRatio),\n    args.sourceMetadata.format || `jpg`,\n    args.fit,\n    args.options\n  )?.src\n}\n\nexport function generateImageData(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageData {\n  args = setDefaultDimensions(args)\n\n  let {\n    pluginName,\n    sourceMetadata,\n    generateImageSource,\n    layout,\n    fit,\n    options,\n    width,\n    height,\n    filename,\n    reporter = { warn },\n    backgroundColor,\n    placeholderURL,\n  } = args\n\n  if (!pluginName) {\n    reporter.warn(\n      `[gatsby-plugin-image] \"generateImageData\" was not passed a plugin name`\n    )\n  }\n\n  if (typeof generateImageSource !== `function`) {\n    throw new Error(`generateImageSource must be a function`)\n  }\n\n  if (!sourceMetadata || (!sourceMetadata.width && !sourceMetadata.height)) {\n    // No metadata means we let the CDN handle max size etc, aspect ratio etc\n    sourceMetadata = {\n      width,\n      height,\n      format: sourceMetadata?.format || formatFromFilename(filename) || `auto`,\n    }\n  } else if (!sourceMetadata.format) {\n    sourceMetadata.format = formatFromFilename(filename)\n  }\n\n  const formats = new Set<ImageFormat>(args.formats)\n\n  if (formats.size === 0 || formats.has(`auto`) || formats.has(``)) {\n    formats.delete(`auto`)\n    formats.delete(``)\n    formats.add(sourceMetadata.format)\n  }\n\n  if (formats.has(`jpg`) && formats.has(`png`)) {\n    reporter.warn(\n      `[${pluginName}] Specifying both 'jpg' and 'png' formats is not supported. Using 'auto' instead`\n    )\n    if (sourceMetadata.format === `jpg`) {\n      formats.delete(`png`)\n    } else {\n      formats.delete(`jpg`)\n    }\n  }\n\n  const imageSizes = calculateImageSizes({ ...args, sourceMetadata })\n\n  const result: IGatsbyImageData[\"images\"] = {\n    sources: [],\n  }\n\n  let sizes = args.sizes\n  if (!sizes) {\n    sizes = getSizes(imageSizes.presentationWidth, layout)\n  }\n\n  formats.forEach(format => {\n    const images = imageSizes.sizes\n      .map(size => {\n        const imageSrc = generateImageSource(\n          filename,\n          size,\n          Math.round(size / imageSizes.aspectRatio),\n          format,\n          fit,\n          options\n        )\n        if (\n          !imageSrc?.width ||\n          !imageSrc.height ||\n          !imageSrc.src ||\n          !imageSrc.format\n        ) {\n          reporter.warn(\n            `[${pluginName}] The resolver for image ${filename} returned an invalid value.`\n          )\n          return undefined\n        }\n        return imageSrc\n      })\n      .filter(Boolean)\n\n    if (format === `jpg` || format === `png` || format === `auto`) {\n      const unscaled =\n        images.find(img => img.width === imageSizes.unscaledWidth) || images[0]\n\n      if (unscaled) {\n        result.fallback = {\n          src: unscaled.src,\n          srcSet: getSrcSet(images),\n          sizes,\n        }\n      }\n    } else {\n      result.sources?.push({\n        srcSet: getSrcSet(images),\n        sizes,\n        type: `image/${format}`,\n      })\n    }\n  })\n\n  const imageProps: Partial<IGatsbyImageData> = {\n    images: result,\n    layout,\n    backgroundColor,\n  }\n\n  if (placeholderURL) {\n    imageProps.placeholder = { fallback: placeholderURL }\n  }\n\n  switch (layout) {\n    case `fixed`:\n      imageProps.width = imageSizes.presentationWidth\n      imageProps.height = imageSizes.presentationHeight\n      break\n\n    case `fullWidth`:\n      imageProps.width = 1\n      imageProps.height = 1 / imageSizes.aspectRatio\n      break\n\n    case `constrained`:\n      imageProps.width = args.width || imageSizes.presentationWidth || 1\n      imageProps.height = (imageProps.width || 1) / imageSizes.aspectRatio\n  }\n\n  return imageProps as IGatsbyImageData\n}\n\nconst dedupeAndSortDensities = (values: Array<number>): Array<number> =>\n  Array.from(new Set([1, ...values])).sort(sortNumeric)\n\nexport function calculateImageSizes(args: IImageSizeArgs): IImageSizes {\n  const {\n    width,\n    height,\n    filename,\n    layout = `constrained`,\n    sourceMetadata: imgDimensions,\n    reporter = { warn },\n    breakpoints = DEFAULT_BREAKPOINTS,\n  } = args\n\n  // check that all dimensions provided are positive\n  const userDimensions = { width, height }\n  const erroneousUserDimensions = Object.entries(userDimensions).filter(\n    ([_, size]) => typeof size === `number` && size < 1\n  )\n  if (erroneousUserDimensions.length) {\n    throw new Error(\n      `Specified dimensions for images must be positive numbers (> 0). Problem dimensions you have are ${erroneousUserDimensions\n        .map(dim => dim.join(`: `))\n        .join(`, `)}`\n    )\n  }\n\n  if (layout === `fixed`) {\n    return fixedImageSizes(args)\n  } else if (layout === `constrained`) {\n    return responsiveImageSizes(args)\n  } else if (layout === `fullWidth`) {\n    return responsiveImageSizes({ breakpoints, ...args })\n  } else {\n    reporter.warn(\n      `No valid layout was provided for the image at ${filename}. Valid image layouts are fixed, fullWidth, and constrained. Found ${layout}`\n    )\n    return {\n      sizes: [imgDimensions.width],\n      presentationWidth: imgDimensions.width,\n      presentationHeight: imgDimensions.height,\n      aspectRatio: imgDimensions.width / imgDimensions.height,\n      unscaledWidth: imgDimensions.width,\n    }\n  }\n}\nexport function fixedImageSizes({\n  filename,\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  reporter = { warn },\n}: IImageSizeArgs): IImageSizes {\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  if (!width) {\n    if (!height) {\n      width = DEFAULT_FIXED_WIDTH\n    } else {\n      width = Math.round(height * aspectRatio)\n    }\n  } else if (!height) {\n    height = Math.round(width / aspectRatio)\n  }\n\n  const originalWidth = width // will use this for presentationWidth, don't want to lose it\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n\n  // If the image is smaller than requested, warn the user that it's being processed as such\n  // print out this message with the necessary information before we overwrite it for sizing\n  if (isTopSizeOverriden) {\n    const fixedDimension = imgDimensions.width < width ? `width` : `height`\n    reporter.warn(`\nThe requested ${fixedDimension} \"${\n      fixedDimension === `width` ? width : height\n    }px\" for the image ${filename} was larger than the actual image ${fixedDimension} of ${\n      imgDimensions[fixedDimension]\n    }px. If possible, replace the current image with a larger one.`)\n\n    if (fixedDimension === `width`) {\n      width = imgDimensions.width\n      height = Math.round(width / aspectRatio)\n    } else {\n      height = imgDimensions.height\n      width = height * aspectRatio\n    }\n  }\n\n  const sizes = densities\n    .filter(size => size >= 1) // remove smaller densities because fixed images don't need them\n    .map(density => Math.round(density * (width as number)))\n    .filter(size => size <= imgDimensions.width)\n\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function responsiveImageSizes({\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  breakpoints,\n  layout,\n}: IImageSizeArgs): IImageSizes {\n  let sizes\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  // Case 1: width of height were passed in, make sure it isn't larger than the actual image\n  width = width && Math.min(width, imgDimensions.width)\n  height = height && Math.min(height, imgDimensions.height)\n\n  // Case 2: neither width or height were passed in, use default size\n  if (!width && !height) {\n    width = Math.min(DEFAULT_FLUID_WIDTH, imgDimensions.width)\n    height = width / aspectRatio\n  }\n\n  // if it still hasn't been found, calculate width from the derived height.\n  // TS isn't smart enough to realise the type for height has been narrowed here\n  if (!width) {\n    width = (height as number) * aspectRatio\n  }\n\n  const originalWidth = width\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n  if (isTopSizeOverriden) {\n    width = imgDimensions.width\n    height = imgDimensions.height\n  }\n\n  width = Math.round(width)\n\n  if (breakpoints?.length > 0) {\n    sizes = breakpoints.filter(size => size <= imgDimensions.width)\n\n    // If a larger breakpoint has been filtered-out, add the actual image width instead\n    if (\n      sizes.length < breakpoints.length &&\n      !sizes.includes(imgDimensions.width)\n    ) {\n      sizes.push(imgDimensions.width)\n    }\n  } else {\n    sizes = densities.map(density => Math.round(density * (width as number)))\n    sizes = sizes.filter(size => size <= imgDimensions.width)\n  }\n\n  // ensure that the size passed in is included in the final output\n  if (layout === `constrained` && !sizes.includes(width)) {\n    sizes.push(width)\n  }\n  sizes = sizes.sort(sortNumeric)\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function getDimensionsAndAspectRatio(\n  dimensions,\n  options\n): { width: number; height: number; aspectRatio: number } {\n  // Calculate the eventual width/height of the image.\n  const imageAspectRatio = dimensions.width / dimensions.height\n\n  let width = options.width\n  let height = options.height\n\n  switch (options.fit) {\n    case `fill`: {\n      width = options.width ? options.width : dimensions.width\n      height = options.height ? options.height : dimensions.height\n      break\n    }\n    case `inside`: {\n      const widthOption = options.width\n        ? options.width\n        : Number.MAX_SAFE_INTEGER\n      const heightOption = options.height\n        ? options.height\n        : Number.MAX_SAFE_INTEGER\n\n      width = Math.min(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.min(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n    case `outside`: {\n      const widthOption = options.width ? options.width : 0\n      const heightOption = options.height ? options.height : 0\n\n      width = Math.max(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.max(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n\n    default: {\n      if (options.width && !options.height) {\n        width = options.width\n        height = Math.round(options.width / imageAspectRatio)\n      }\n\n      if (options.height && !options.width) {\n        width = Math.round(options.height * imageAspectRatio)\n        height = options.height\n      }\n    }\n  }\n\n  return {\n    width,\n    height,\n    aspectRatio: width / height,\n  }\n}\n","/* global GATSBY___IMAGE */\nimport { generateImageData, EVERY_BREAKPOINT } from \"../image-utils\"\nimport type { CSSProperties, HTMLAttributes, ImgHTMLAttributes } from \"react\"\nimport type { Node } from \"gatsby\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { IGatsbyImageData } from \"./gatsby-image.browser\"\nimport type {\n  IGatsbyImageHelperArgs,\n  Layout,\n  IImage,\n  ImageFormat,\n} from \"../image-utils\"\n\n// Native lazy-loading support: https://addyosmani.com/blog/lazy-loading/\nexport const hasNativeLazyLoadSupport = (): boolean =>\n  typeof HTMLImageElement !== `undefined` &&\n  `loading` in HTMLImageElement.prototype\n\nexport function gatsbyImageIsInstalled(): boolean {\n  return typeof GATSBY___IMAGE !== `undefined` && GATSBY___IMAGE\n}\n\nexport type IGatsbyImageDataParent<T = never> = T & {\n  gatsbyImageData: IGatsbyImageData\n}\nexport type IGatsbyImageParent<T = never> = T & {\n  gatsbyImage: IGatsbyImageData\n}\nexport type FileNode = Partial<Node> & {\n  childImageSharp?: IGatsbyImageDataParent<Partial<Node>>\n}\n\nconst isGatsbyImageData = (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageData | any\n): node is IGatsbyImageData =>\n  // 🦆 check for a deep prop to be sure this is a valid gatsbyImageData object\n  Boolean(node?.images?.fallback?.src)\n\nconst isGatsbyImageDataParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageDataParent<T> | any\n): node is IGatsbyImageDataParent<T> => Boolean(node?.gatsbyImageData)\n\nconst isGatsbyImageParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageParent<T> | any\n): node is IGatsbyImageParent<T> => Boolean(node?.gatsbyImage)\n\nexport type ImageDataLike =\n  | FileNode\n  | IGatsbyImageDataParent\n  | IGatsbyImageParent\n  | IGatsbyImageData\n\nexport const getImage = (\n  node: ImageDataLike | null\n): IGatsbyImageData | undefined => {\n  // This checks both for gatsbyImageData and gatsbyImage\n  if (isGatsbyImageData(node)) {\n    return node\n  }\n  // gatsbyImageData GraphQL field\n  if (isGatsbyImageDataParent(node)) {\n    return node.gatsbyImageData\n  }\n  // gatsbyImage GraphQL field for Gatsby's Image CDN service\n  if (isGatsbyImageParent(node)) {\n    return node.gatsbyImage\n  }\n  return node?.childImageSharp?.gatsbyImageData\n}\n\nexport const getSrc = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.src\n\nexport const getSrcSet = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.srcSet\n\nexport function getWrapperProps(\n  width: number,\n  height: number,\n  layout: Layout\n): Pick<HTMLAttributes<HTMLElement>, \"className\" | \"style\"> & {\n  \"data-gatsby-image-wrapper\": string\n} {\n  const wrapperStyle: CSSProperties = {}\n\n  let className = `gatsby-image-wrapper`\n\n  // If the plugin isn't installed we need to apply the styles inline\n  if (!gatsbyImageIsInstalled()) {\n    wrapperStyle.position = `relative`\n    wrapperStyle.overflow = `hidden`\n  }\n\n  if (layout === `fixed`) {\n    wrapperStyle.width = width\n    wrapperStyle.height = height\n  } else if (layout === `constrained`) {\n    if (!gatsbyImageIsInstalled()) {\n      wrapperStyle.display = `inline-block`\n      wrapperStyle.verticalAlign = `top`\n    }\n    className = `gatsby-image-wrapper gatsby-image-wrapper-constrained`\n  }\n\n  return {\n    className,\n    \"data-gatsby-image-wrapper\": ``,\n    style: wrapperStyle,\n  }\n}\n\nexport interface IUrlBuilderArgs<OptionsType> {\n  width: number\n  height: number\n  baseUrl: string\n  format: ImageFormat\n  options: OptionsType\n}\nexport interface IGetImageDataArgs<OptionsType = Record<string, unknown>> {\n  baseUrl: string\n  /**\n   * For constrained and fixed images, the size of the image element\n   */\n  width?: number\n  height?: number\n  /**\n   * If available, pass the source image width and height\n   */\n  sourceWidth?: number\n  sourceHeight?: number\n  /**\n   * If only one dimension is passed, then this will be used to calculate the other.\n   */\n  aspectRatio?: number\n  layout?: Layout\n  /**\n   * Returns a URL based on the passed arguments. Should be a pure function\n   */\n  urlBuilder: (args: IUrlBuilderArgs<OptionsType>) => string\n\n  /**\n   * Should be a data URI\n   */\n  placeholderURL?: string\n  backgroundColor?: string\n  /**\n   * Used in error messages etc\n   */\n  pluginName?: string\n\n  /**\n   * If you do not support auto-format, pass an array of image types here\n   */\n  formats?: Array<ImageFormat>\n\n  breakpoints?: Array<number>\n\n  /**\n   * Passed to the urlBuilder function\n   */\n  options?: OptionsType\n}\n\n/**\n * Use this hook to generate gatsby-plugin-image data in the browser.\n */\nexport function getImageData<OptionsType>({\n  baseUrl,\n  urlBuilder,\n  sourceWidth,\n  sourceHeight,\n  pluginName = `getImageData`,\n  formats = [`auto`],\n  breakpoints,\n  options,\n  ...props\n}: IGetImageDataArgs<OptionsType>): IGatsbyImageData {\n  if (\n    !breakpoints?.length &&\n    (props.layout === `fullWidth` || (props.layout as string) === `FULL_WIDTH`)\n  ) {\n    breakpoints = EVERY_BREAKPOINT\n  }\n  const generateImageSource = (\n    baseUrl: string,\n    width: number,\n    height?: number,\n    format?: ImageFormat\n  ): IImage => {\n    return {\n      width,\n      height,\n      format,\n      src: urlBuilder({ baseUrl, width, height, options, format }),\n    }\n  }\n\n  const sourceMetadata: IGatsbyImageHelperArgs[\"sourceMetadata\"] = {\n    width: sourceWidth,\n    height: sourceHeight,\n    format: `auto`,\n  }\n\n  const args: IGatsbyImageHelperArgs = {\n    ...props,\n    pluginName,\n    generateImageSource,\n    filename: baseUrl,\n    formats,\n    breakpoints,\n    sourceMetadata,\n  }\n  return generateImageData(args)\n}\n\nexport function getMainProps(\n  isLoading: boolean,\n  isLoaded: boolean,\n  images: IGatsbyImageData[\"images\"],\n  loading?: \"eager\" | \"lazy\",\n  style: CSSProperties = {}\n): Partial<MainImageProps> {\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      transform: `translateZ(0)`,\n      transition: `opacity 250ms linear`,\n      width: `100%`,\n      willChange: `opacity`,\n      ...style,\n    }\n  }\n\n  const result = {\n    ...images,\n    loading,\n    shouldLoad: isLoading,\n    \"data-main-image\": ``,\n    style: {\n      ...style,\n      opacity: isLoaded ? 1 : 0,\n    },\n  }\n\n  return result\n}\n\nexport type PlaceholderImageAttrs = ImgHTMLAttributes<HTMLImageElement> &\n  Pick<PlaceholderProps, \"sources\" | \"fallback\"> & {\n    \"data-placeholder-image\"?: string\n  }\n\nexport function getPlaceholderProps(\n  placeholder: PlaceholderImageAttrs | undefined,\n  isLoaded: boolean,\n  layout: Layout,\n  width?: number,\n  height?: number,\n  backgroundColor?: string,\n  objectFit?: CSSProperties[\"objectFit\"],\n  objectPosition?: CSSProperties[\"objectPosition\"]\n): PlaceholderImageAttrs {\n  const wrapperStyle: CSSProperties = {}\n\n  if (backgroundColor) {\n    wrapperStyle.backgroundColor = backgroundColor\n\n    if (layout === `fixed`) {\n      wrapperStyle.width = width\n      wrapperStyle.height = height\n      wrapperStyle.backgroundColor = backgroundColor\n      wrapperStyle.position = `relative`\n    } else if (layout === `constrained`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    } else if (layout === `fullWidth`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    }\n  }\n\n  if (objectFit) {\n    wrapperStyle.objectFit = objectFit\n  }\n\n  if (objectPosition) {\n    wrapperStyle.objectPosition = objectPosition\n  }\n  const result: PlaceholderImageAttrs = {\n    ...placeholder,\n    \"aria-hidden\": true,\n    \"data-placeholder-image\": ``,\n    style: {\n      opacity: isLoaded ? 0 : 1,\n      transition: `opacity 500ms linear`,\n      ...wrapperStyle,\n    },\n  }\n\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    result.style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      width: `100%`,\n    }\n  }\n\n  return result\n}\n\nexport interface IArtDirectedImage {\n  media: string\n  image: IGatsbyImageData\n}\n\n/**\n * Generate a Gatsby image data object with multiple, art-directed images that display at different\n * resolutions.\n *\n * @param defaultImage The image displayed when no media query matches.\n * It is also used for all other settings applied to the image, such as width, height and layout.\n * You should pass a className to the component with media queries to adjust the size of the container,\n * as this cannot be adjusted automatically.\n * @param artDirected Array of objects which each contains a `media` string which is a media query\n * such as `(min-width: 320px)`, and the image object to use when that query matches.\n */\nexport function withArtDirection(\n  defaultImage: IGatsbyImageData,\n  artDirected: Array<IArtDirectedImage>\n): IGatsbyImageData {\n  const { images, placeholder, ...props } = defaultImage\n  const output: IGatsbyImageData = {\n    ...props,\n    images: {\n      ...images,\n      sources: [],\n    },\n    placeholder: placeholder && {\n      ...placeholder,\n      sources: [],\n    },\n  }\n\n  artDirected.forEach(({ media, image }) => {\n    if (!media) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(\n          \"[gatsby-plugin-image] All art-directed images passed to must have a value set for `media`. Skipping.\"\n        )\n      }\n      return\n    }\n\n    if (\n      image.layout !== defaultImage.layout &&\n      process.env.NODE_ENV === `development`\n    ) {\n      console.warn(\n        `[gatsby-plugin-image] Mismatched image layout: expected \"${defaultImage.layout}\" but received \"${image.layout}\". All art-directed images use the same layout as the default image`\n      )\n    }\n\n    output.images.sources.push(\n      ...image.images.sources.map(source => {\n        return { ...source, media }\n      }),\n      {\n        media,\n        srcSet: image.images.fallback.srcSet,\n      }\n    )\n\n    if (!output.placeholder) {\n      return\n    }\n\n    output.placeholder.sources.push({\n      media,\n      srcSet: image.placeholder.fallback,\n    })\n  })\n  output.images.sources.push(...images.sources)\n  if (placeholder?.sources) {\n    output.placeholder?.sources.push(...placeholder.sources)\n  }\n  return output\n}\n","import React, { Fragment, FunctionComponent, PropsWithChildren } from \"react\"\nimport terserMacro from \"../../macros/terser.macro\"\nimport { Layout } from \"../image-utils\"\n\nexport interface ILayoutWrapperProps {\n  layout: Layout\n  width: number\n  height: number\n}\n\nconst NativeScriptLoading: FunctionComponent = () => (\n  <script\n    type=\"module\"\n    dangerouslySetInnerHTML={{\n      __html: terserMacro`\nconst hasNativeLazyLoadSupport = typeof HTMLImageElement !== \"undefined\" && \"loading\" in HTMLImageElement.prototype;\nif (hasNativeLazyLoadSupport) {\n  const gatsbyImages = document.querySelectorAll('img[data-main-image]');\n  for (let mainImage of gatsbyImages) {\n    if (mainImage.dataset.src) {\n      mainImage.setAttribute('src', mainImage.dataset.src)\n      mainImage.removeAttribute('data-src')\n    }\n    if (mainImage.dataset.srcset) {\n      mainImage.setAttribute('srcset', mainImage.dataset.srcset)\n      mainImage.removeAttribute('data-srcset')\n    }\n\n    const sources = mainImage.parentNode.querySelectorAll('source[data-srcset]');\n    for (let source of sources) {\n      source.setAttribute('srcset', source.dataset.srcset)\n      source.removeAttribute('data-srcset')\n    }\n\n    if (mainImage.complete) {\n      mainImage.style.opacity = 1;\n\n      // also hide the placeholder\n      mainImage.parentNode.parentNode.querySelector('[data-placeholder-image]').style.opacity = 0;\n    }\n  }\n}\n`,\n    }}\n  />\n)\n\nexport function getSizer(\n  layout: Layout,\n  width: number,\n  height: number\n): string {\n  let sizer = ``\n  if (layout === `fullWidth`) {\n    sizer = `<div aria-hidden=\"true\" style=\"padding-top: ${\n      (height / width) * 100\n    }%;\"></div>`\n  }\n\n  if (layout === `constrained`) {\n    sizer = `<div style=\"max-width: ${width}px; display: block;\"><img alt=\"\" role=\"presentation\" aria-hidden=\"true\" src=\"data:image/svg+xml;charset=utf-8,%3Csvg%20height='${height}'%20width='${width}'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E\" style=\"max-width: 100%; display: block; position: static;\"></div>`\n  }\n\n  return sizer\n}\n\nconst Sizer: FunctionComponent<ILayoutWrapperProps> = function Sizer({\n  layout,\n  width,\n  height,\n}) {\n  if (layout === `fullWidth`) {\n    return (\n      <div aria-hidden style={{ paddingTop: `${(height / width) * 100}%` }} />\n    )\n  }\n\n  if (layout === `constrained`) {\n    return (\n      <div style={{ maxWidth: width, display: `block` }}>\n        <img\n          alt=\"\"\n          role=\"presentation\"\n          aria-hidden=\"true\"\n          src={`data:image/svg+xml;charset=utf-8,%3Csvg%20height='${height}'%20width='${width}'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E`}\n          style={{\n            maxWidth: `100%`,\n            display: `block`,\n            position: `static`,\n          }}\n        />\n      </div>\n    )\n  }\n\n  return null\n}\n\nexport const LayoutWrapper: FunctionComponent<\n  PropsWithChildren<ILayoutWrapperProps>\n> = function LayoutWrapper({ children, ...props }) {\n  return (\n    <Fragment>\n      <Sizer {...props} />\n      {children}\n\n      {SERVER ? <NativeScriptLoading /> : null}\n    </Fragment>\n  )\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\n\nexport interface IResponsiveImageProps {\n  sizes?: string\n  srcSet: string\n}\n\nexport type SourceProps = IResponsiveImageProps &\n  (\n    | {\n        media: string\n        type?: string\n      }\n    | {\n        media?: string\n        type: string\n      }\n  )\n\ntype FallbackProps = { src: string } & Partial<IResponsiveImageProps>\n\ntype ImageProps = ImgHTMLAttributes<HTMLImageElement> & {\n  src: string\n  alt: string\n  shouldLoad: boolean\n}\n\nexport type PictureProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: FallbackProps\n  sources?: Array<SourceProps>\n  alt: string\n  shouldLoad?: boolean\n}\n\nconst Image: FunctionComponent<ImageProps> = function Image({\n  src,\n  srcSet,\n  loading,\n  alt = ``,\n  shouldLoad,\n  ...props\n}) {\n  return (\n    <img\n      {...props}\n      decoding=\"async\"\n      loading={loading}\n      src={shouldLoad ? src : undefined}\n      data-src={!shouldLoad ? src : undefined}\n      srcSet={shouldLoad ? srcSet : undefined}\n      data-srcset={!shouldLoad ? srcSet : undefined}\n      alt={alt}\n    />\n  )\n}\n\nexport const Picture: React.FC<PictureProps> = function Picture({\n  fallback,\n  sources = [],\n  shouldLoad = true,\n  ...props\n}) {\n  const sizes = props.sizes || fallback?.sizes\n  const fallbackImage = (\n    <Image {...props} {...fallback} sizes={sizes} shouldLoad={shouldLoad} />\n  )\n\n  if (!sources.length) {\n    return fallbackImage\n  }\n\n  return (\n    <picture>\n      {sources.map(({ media, srcSet, type }) => (\n        <source\n          key={`${media}-${type}-${srcSet}`}\n          type={type}\n          media={media}\n          srcSet={shouldLoad ? srcSet : undefined}\n          data-srcset={!shouldLoad ? srcSet : undefined}\n          sizes={sizes}\n        />\n      ))}\n      {fallbackImage}\n    </picture>\n  )\n}\n\nImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  sizes: PropTypes.string,\n  srcSet: PropTypes.string,\n  shouldLoad: PropTypes.bool,\n}\n\nPicture.displayName = `Picture`\nPicture.propTypes = {\n  alt: PropTypes.string.isRequired,\n  shouldLoad: PropTypes.bool,\n  fallback: PropTypes.exact({\n    src: PropTypes.string.isRequired,\n    srcSet: PropTypes.string,\n    sizes: PropTypes.string,\n  }),\n  sources: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.exact({\n        media: PropTypes.string.isRequired,\n        type: PropTypes.string,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n      PropTypes.exact({\n        media: PropTypes.string,\n        type: PropTypes.string.isRequired,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n    ])\n  ),\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\nimport { Picture, SourceProps } from \"./picture\"\n\nexport type PlaceholderProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: string\n  sources?: Array<SourceProps>\n}\n\nexport const Placeholder: FunctionComponent<PlaceholderProps> =\n  function Placeholder({ fallback, ...props }) {\n    if (fallback) {\n      return (\n        <Picture\n          {...props}\n          fallback={{\n            src: fallback,\n          }}\n          aria-hidden\n          alt=\"\"\n        />\n      )\n    } else {\n      return <div {...props}></div>\n    }\n  }\n\nPlaceholder.displayName = `Placeholder`\nPlaceholder.propTypes = {\n  fallback: PropTypes.string,\n  sources: Picture.propTypes?.sources,\n  alt: function (props, propName, componentName): Error | null {\n    if (!props[propName]) {\n      return null\n    }\n\n    return new Error(\n      `Invalid prop \\`${propName}\\` supplied to \\`${componentName}\\`. Validation failed.`\n    )\n  },\n}\n","import React from \"react\"\nimport { Picture, PictureProps } from \"./picture\"\n\nexport type MainImageProps = PictureProps\n\nexport const MainImage: React.FC<PictureProps> = function MainImage(props) {\n  return (\n    <>\n      <Picture {...props} />\n      <noscript>\n        <Picture {...props} shouldLoad={true} />\n      </noscript>\n    </>\n  )\n}\n\nMainImage.displayName = `MainImage`\nMainImage.propTypes = Picture.propTypes\n","import React from \"react\"\nimport { getWrapperProps, getMainProps, getPlaceholderProps } from \"./hooks\"\nimport { Placeholder } from \"./placeholder\"\nimport { MainImage, MainImageProps } from \"./main-image\"\nimport { LayoutWrapper } from \"./layout-wrapper\"\nimport PropTypes from \"prop-types\"\nimport type { FunctionComponent, WeakValidationMap } from \"react\"\nimport type { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\n\nconst removeNewLines = (str: string): string => str.replace(/\\n/g, ``)\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> =\n  function GatsbyImage({\n    as = `div`,\n    className,\n    class: preactClass,\n    style,\n    image,\n    loading = `lazy`,\n    imgClassName,\n    imgStyle,\n    backgroundColor,\n    objectFit,\n    objectPosition,\n    ...props\n  }) {\n    if (!image) {\n      console.warn(`[gatsby-plugin-image] Missing image prop`)\n      return null\n    }\n\n    if (preactClass) {\n      className = preactClass\n    }\n\n    imgStyle = {\n      objectFit,\n      objectPosition,\n      backgroundColor,\n      ...imgStyle,\n    }\n\n    const {\n      width,\n      height,\n      layout,\n      images,\n      placeholder,\n      backgroundColor: placeholderBackgroundColor,\n    } = image\n\n    const {\n      style: wStyle,\n      className: wClass,\n      ...wrapperProps\n    } = getWrapperProps(width, height, layout)\n\n    const cleanedImages: IGatsbyImageData[\"images\"] = {\n      fallback: undefined,\n      sources: [],\n    }\n    if (images.fallback) {\n      cleanedImages.fallback = {\n        ...images.fallback,\n        srcSet: images.fallback.srcSet\n          ? removeNewLines(images.fallback.srcSet)\n          : undefined,\n      }\n    }\n\n    if (images.sources) {\n      cleanedImages.sources = images.sources.map(source => {\n        return {\n          ...source,\n          srcSet: removeNewLines(source.srcSet),\n        }\n      })\n    }\n\n    return React.createElement(\n      as,\n      {\n        ...wrapperProps,\n        style: {\n          ...wStyle,\n          ...style,\n          backgroundColor,\n        },\n        className: `${wClass}${className ? ` ${className}` : ``}`,\n      },\n      <LayoutWrapper layout={layout} width={width} height={height}>\n        <Placeholder\n          {...getPlaceholderProps(\n            placeholder,\n            false,\n            layout,\n            width,\n            height,\n            placeholderBackgroundColor,\n            objectFit,\n            objectPosition\n          )}\n        />\n\n        <MainImage\n          data-gatsby-image-ssr=\"\"\n          className={imgClassName}\n          {...(props as Omit<\n            MainImageProps,\n            \"images\" | \"fallback\" | \"onError\" | \"onLoad\"\n          >)}\n          // When eager is set we want to start the isLoading state on true (we want to load the img without react)\n          {...getMainProps(\n            loading === `eager`,\n            false,\n            cleanedImages,\n            loading,\n            imgStyle\n          )}\n        />\n      </LayoutWrapper>\n    )\n  }\n\nexport const altValidator: PropTypes.Validator<string> = (\n  props: GatsbyImageProps,\n  propName,\n  componentName,\n  ...rest\n): Error | undefined => {\n  if (!props.alt && props.alt !== ``) {\n    return new Error(\n      `The \"alt\" prop is required in ${componentName}. If the image is purely presentational then pass an empty string: e.g. alt=\"\". Learn more: https://a11y-style-guide.com/style-guide/section-media.html`\n    )\n  }\n\n  return PropTypes.string(props, propName, componentName, ...rest)\n}\n\nexport const propTypes = {\n  image: PropTypes.object.isRequired,\n  alt: altValidator,\n} as WeakValidationMap<GatsbyImageProps>\n","import {\n  createElement,\n  memo,\n  useMemo,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n} from \"react\"\nimport {\n  getWrapperProps,\n  gatsbyImageIsInstalled,\n  hasNativeLazyLoadSupport,\n} from \"./hooks\"\nimport { getSizer } from \"./layout-wrapper\"\nimport { propTypes } from \"./gatsby-image.server\"\nimport type {\n  FC,\n  ElementType,\n  FunctionComponent,\n  ImgHTMLAttributes,\n  CSSProperties,\n  ReactEventHandler,\n} from \"react\"\nimport type { renderImageToString } from \"./lazy-hydrate\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { Layout } from \"../image-utils\"\n\nconst imageCache = new Set<string>()\nlet renderImageToStringPromise\nlet renderImage: typeof renderImageToString | undefined\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface GatsbyImageProps\n  extends Omit<\n    ImgHTMLAttributes<HTMLImageElement>,\n    \"placeholder\" | \"onLoad\" | \"src\" | \"srcSet\" | \"width\" | \"height\"\n  > {\n  alt: string\n  as?: ElementType\n  className?: string\n  class?: string\n  imgClassName?: string\n  image: IGatsbyImageData\n  imgStyle?: CSSProperties\n  backgroundColor?: string\n  objectFit?: CSSProperties[\"objectFit\"]\n  objectPosition?: CSSProperties[\"objectPosition\"]\n  onLoad?: (props: { wasCached: boolean }) => void\n  onError?: ReactEventHandler<HTMLImageElement>\n  onStartLoad?: (props: { wasCached: boolean }) => void\n}\n\nexport interface IGatsbyImageData {\n  layout: Layout\n  width: number\n  height: number\n  backgroundColor?: string\n  images: Pick<MainImageProps, \"sources\" | \"fallback\">\n  placeholder?: Pick<PlaceholderProps, \"sources\" | \"fallback\">\n}\n\nconst GatsbyImageHydrator: FC<GatsbyImageProps> = function GatsbyImageHydrator({\n  as = `div`,\n  image,\n  style,\n  backgroundColor,\n  className,\n  class: preactClass,\n  onStartLoad,\n  onLoad,\n  onError,\n  ...props\n}) {\n  const { width, height, layout } = image\n  const {\n    style: wStyle,\n    className: wClass,\n    ...wrapperProps\n  } = getWrapperProps(width, height, layout)\n  const root = useRef<HTMLElement>()\n  const cacheKey = useMemo(() => JSON.stringify(image.images), [image.images])\n\n  // Preact uses class instead of className so we need to check for both\n  if (preactClass) {\n    className = preactClass\n  }\n\n  const sizer = getSizer(layout, width, height)\n\n  useEffect(() => {\n    if (!renderImageToStringPromise) {\n      renderImageToStringPromise = import(`./lazy-hydrate`).then(\n        ({ renderImageToString, swapPlaceholderImage }) => {\n          renderImage = renderImageToString\n\n          return {\n            renderImageToString,\n            swapPlaceholderImage,\n          }\n        }\n      )\n    }\n\n    // The plugin image component is a bit special where if it's server-side rendered, we add extra script tags to support lazy-loading without\n    // In this case we stop hydration but fire the correct events.\n    const ssrImage = root.current.querySelector(\n      `[data-gatsby-image-ssr]`\n    ) as HTMLImageElement\n    if (ssrImage && hasNativeLazyLoadSupport()) {\n      if (ssrImage.complete) {\n        // Trigger onStartload and onLoad events\n        onStartLoad?.({\n          wasCached: true,\n        })\n        onLoad?.({\n          wasCached: true,\n        })\n\n        // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n        setTimeout(() => {\n          ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n        }, 0)\n      } else {\n        onStartLoad?.({\n          wasCached: true,\n        })\n\n        ssrImage.addEventListener(`load`, function onLoadListener() {\n          ssrImage.removeEventListener(`load`, onLoadListener)\n\n          onLoad?.({\n            wasCached: true,\n          })\n          // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n          setTimeout(() => {\n            ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n          }, 0)\n        })\n      }\n\n      imageCache.add(cacheKey)\n\n      return\n    }\n\n    if (renderImage && imageCache.has(cacheKey)) {\n      return\n    }\n\n    let animationFrame\n    let cleanupCallback\n    renderImageToStringPromise.then(\n      ({ renderImageToString, swapPlaceholderImage }) => {\n        if (!root.current) {\n          return\n        }\n\n        root.current.innerHTML = renderImageToString({\n          isLoading: true,\n          isLoaded: imageCache.has(cacheKey),\n          image,\n          ...props,\n        })\n\n        if (!imageCache.has(cacheKey)) {\n          animationFrame = requestAnimationFrame(() => {\n            if (root.current) {\n              cleanupCallback = swapPlaceholderImage(\n                root.current,\n                cacheKey,\n                imageCache,\n                style,\n                onStartLoad,\n                onLoad,\n                onError\n              )\n            }\n          })\n        }\n      }\n    )\n\n    // eslint-disable-next-line consistent-return\n    return (): void => {\n      if (animationFrame) {\n        cancelAnimationFrame(animationFrame)\n      }\n      if (cleanupCallback) {\n        cleanupCallback()\n      }\n    }\n  }, [image])\n\n  // useLayoutEffect is ran before React commits to the DOM. This allows us to make sure our HTML is using our cached image version\n  useLayoutEffect(() => {\n    if (imageCache.has(cacheKey) && renderImage) {\n      root.current.innerHTML = renderImage({\n        isLoading: imageCache.has(cacheKey),\n        isLoaded: imageCache.has(cacheKey),\n        image,\n        ...props,\n      })\n\n      // Trigger onStartload and onLoad events\n      onStartLoad?.({\n        wasCached: true,\n      })\n      onLoad?.({\n        wasCached: true,\n      })\n    }\n  }, [image])\n\n  // By keeping all props equal React will keep the component in the DOM\n  return createElement(as, {\n    ...wrapperProps,\n    style: {\n      ...wStyle,\n      ...style,\n      backgroundColor,\n    },\n    className: `${wClass}${className ? ` ${className}` : ``}`,\n    ref: root,\n    dangerouslySetInnerHTML: {\n      __html: sizer,\n    },\n    suppressHydrationWarning: true,\n  })\n}\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> = memo(\n  function GatsbyImage(props) {\n    if (!props.image) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(`[gatsby-plugin-image] Missing image prop`)\n      }\n\n      return null\n    }\n\n    if (!gatsbyImageIsInstalled() && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `[gatsby-plugin-image] You're missing out on some cool performance features. Please add \"gatsby-plugin-image\" to your gatsby-config.js`\n      )\n    }\n\n    return createElement(GatsbyImageHydrator, props)\n  }\n)\n\nGatsbyImage.propTypes = propTypes\nGatsbyImage.displayName = `GatsbyImage`\n","import React, { FunctionComponent, ReactElement } from \"react\"\nimport {\n  altValidator,\n  GatsbyImage as GatsbyImageServer,\n} from \"./gatsby-image.server\"\nimport { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\nimport PropTypes from \"prop-types\"\nimport { ISharpGatsbyImageArgs } from \"../image-utils\"\n\nexport interface IStaticImageProps\n  extends Omit<GatsbyImageProps, \"image\">,\n    Omit<ISharpGatsbyImageArgs, \"backgroundColor\"> {\n  src: string\n  filename?: string\n}\n\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nexport function _getStaticImage(\n  GatsbyImage: FunctionComponent<GatsbyImageProps>\n): React.FC<IStaticImageProps & IPrivateProps> {\n  return function StaticImage({\n    src,\n    __imageData: imageData,\n    __error,\n    // We extract these because they're not meant to be passed-down to GatsbyImage\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    width,\n    height,\n    aspectRatio,\n    tracedSVGOptions,\n    placeholder,\n    formats,\n    quality,\n    transformOptions,\n    jpgOptions,\n    pngOptions,\n    webpOptions,\n    avifOptions,\n    blurredOptions,\n    breakpoints,\n    outputPixelDensities,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    ...props\n  }): ReactElement {\n    if (__error) {\n      console.warn(__error)\n    }\n\n    if (imageData) {\n      return <GatsbyImage image={imageData} {...props} />\n    }\n    console.warn(`Image not loaded`, src)\n    if (!__error && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `Please ensure that \"gatsby-plugin-image\" is included in the plugins array in gatsby-config.js, and that your version of gatsby is at least 2.24.78`\n      )\n    }\n    return null\n  }\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageServer)\n\nconst checkDimensionProps: PropTypes.Validator<number> = (\n  props: IStaticImageProps & IPrivateProps,\n  propName: keyof IStaticImageProps & IPrivateProps,\n  ...rest\n) => {\n  if (\n    props.layout === `fullWidth` &&\n    (propName === `width` || propName === `height`) &&\n    props[propName]\n  ) {\n    return new Error(\n      `\"${propName}\" ${props[propName]} may not be passed when layout is fullWidth.`\n    )\n  }\n  return PropTypes.number(props, propName, ...rest)\n}\n\nconst validLayouts = new Set([`fixed`, `fullWidth`, `constrained`])\n\nexport const propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: altValidator,\n  width: checkDimensionProps,\n  height: checkDimensionProps,\n  sizes: PropTypes.string,\n  layout: (props: IStaticImageProps & IPrivateProps): Error | undefined => {\n    if (props.layout === undefined) {\n      return undefined\n    }\n    if (validLayouts.has(props.layout)) {\n      return undefined\n    }\n\n    return new Error(\n      `Invalid value ${props.layout}\" provided for prop \"layout\". Defaulting to \"constrained\". Valid values are \"fixed\", \"fullWidth\" or \"constrained\".`\n    )\n  },\n}\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","import {\n  GatsbyImage as GatsbyImageBrowser,\n  IGatsbyImageData,\n} from \"./gatsby-image.browser\"\nimport React from \"react\"\nimport {\n  _getStaticImage,\n  propTypes,\n  IStaticImageProps,\n} from \"./static-image.server\"\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageBrowser)\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","import React from \"react\"\r\nimport { Link } from \"gatsby\"\r\nimport { StaticImage } from \"gatsby-plugin-image\"\r\nimport { motion } from \"framer-motion\"\r\n\r\nconst Header = () => {\r\n    return (\r\n      <header className=\"fixed w-full top-0 z-10\">\r\n        <nav className=\"max-w-6xl mx-auto px-4\">  {/* Changed max-w-5xl to max-w-6xl and px-6 to px-4 */}\r\n          <div className=\"flex justify-between items-center py-5\">\r\n          <Link to=\"/\" className=\"flex items-center space-x-2\">\r\n            <StaticImage\r\n              src=\"../../images/Nook_logo.png\"\r\n              alt=\"The Nook\"\r\n              height={90}  // Increased from 24 to 40\r\n              placeholder=\"blurred\"\r\n              className=\"w-auto\"\r\n              quality={95}\r\n            />\r\n          </Link>\r\n            <div className=\"flex space-x-6\">\r\n              <Link \r\n              to=\"/events\" \r\n              className=\"text-xl text-gray-600 hover:text-gray-900 transition-colors relative group\"\r\n              >\r\n              <span className=\"relative z-10\">Events</span>\r\n              <motion.span\r\n                className=\"absolute inset-0 bg-orange-100 rounded-lg opacity-0\"\r\n                animate={{\r\n                  opacity: [0, 0.2, 0],\r\n                  scale: [1, 1.1, 1]\r\n                }}\r\n                transition={{\r\n                  duration: 2,\r\n                  repeat: Infinity,\r\n                  ease: \"easeInOut\"\r\n                }}\r\n              />\r\n            </Link>\r\n            <Link \r\n              to=\"/visit\" \r\n              className=\"text-xl text-gray-600 hover:text-gray-900 transition-colors relative group\"\r\n              >\r\n              <span className=\"relative z-10\">Visit Us</span>\r\n              <motion.span\r\n                className=\"absolute inset-0 bg-orange-100 rounded-lg opacity-0\"\r\n                animate={{\r\n                  opacity: [0, 0.2, 0],\r\n                  scale: [1, 1.1, 1]\r\n                }}\r\n                transition={{\r\n                  duration: 2,\r\n                  repeat: Infinity,\r\n                  ease: \"easeInOut\"\r\n                }}\r\n              />\r\n            </Link>\r\n\r\n            </div>\r\n\r\n          </div>\r\n        </nav>\r\n      </header>\r\n    )\r\n  }\r\n\r\nexport default Header","import React from \"react\"\r\nimport Header from \"./Header\"\r\n\r\nconst Layout = ({ children }: { children: React.ReactNode }) => {\r\n    return (\r\n      <div className=\"min-h-screen bg-gradient-to-br from-gray-50 to-gray-100 flex flex-col\">\r\n        <Header />\r\n        {children}\r\n      </div>\r\n    )\r\n  }\r\n\r\nexport default Layout","import { warnOnce } from '../../utils/warn-once.mjs';\n\nfunction createDOMMotionComponentProxy(componentFactory) {\n    if (typeof Proxy === \"undefined\") {\n        return componentFactory;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    const deprecatedFactoryFunction = (...args) => {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"motion() is deprecated. Use motion.create() instead.\");\n        }\n        return componentFactory(...args);\n    };\n    return new Proxy(deprecatedFactoryFunction, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            if (key === \"create\")\n                return componentFactory;\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, componentFactory(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createDOMMotionComponentProxy };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement === null || visualElement === void 0 ? void 0 : visualElement.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","/*#__NO_SIDE_EFFECTS__*/\nfunction memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { memo } from 'motion-utils';\n\nconst supportsScrollTimeline = memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","import { supportsScrollTimeline } from '../../utils/supports/scroll-timeline.mjs';\n\nclass BaseGroupPlaybackControls {\n    constructor(animations) {\n        // Bound to accomodate common `return animation.stop` pattern\n        this.stop = () => this.runAll(\"stop\");\n        this.animations = animations.filter(Boolean);\n    }\n    get finished() {\n        // Support for new finished Promise and legacy thennable API\n        return Promise.all(this.animations.map((animation) => \"finished\" in animation ? animation.finished : animation));\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    getAll(propName) {\n        return this.animations[0][propName];\n    }\n    setAll(propName, newValue) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i][propName] = newValue;\n        }\n    }\n    attachTimeline(timeline, fallback) {\n        const subscriptions = this.animations.map((animation) => {\n            if (supportsScrollTimeline() && animation.attachTimeline) {\n                return animation.attachTimeline(timeline);\n            }\n            else if (typeof fallback === \"function\") {\n                return fallback(animation);\n            }\n        });\n        return () => {\n            subscriptions.forEach((cancel, i) => {\n                cancel && cancel();\n                this.animations[i].stop();\n            });\n        };\n    }\n    get time() {\n        return this.getAll(\"time\");\n    }\n    set time(time) {\n        this.setAll(\"time\", time);\n    }\n    get speed() {\n        return this.getAll(\"speed\");\n    }\n    set speed(speed) {\n        this.setAll(\"speed\", speed);\n    }\n    get startTime() {\n        return this.getAll(\"startTime\");\n    }\n    get duration() {\n        let max = 0;\n        for (let i = 0; i < this.animations.length; i++) {\n            max = Math.max(max, this.animations[i].duration);\n        }\n        return max;\n    }\n    runAll(methodName) {\n        this.animations.forEach((controls) => controls[methodName]());\n    }\n    flatten() {\n        this.runAll(\"flatten\");\n    }\n    play() {\n        this.runAll(\"play\");\n    }\n    pause() {\n        this.runAll(\"pause\");\n    }\n    cancel() {\n        this.runAll(\"cancel\");\n    }\n    complete() {\n        this.runAll(\"complete\");\n    }\n}\n\nexport { BaseGroupPlaybackControls };\n","import { BaseGroupPlaybackControls } from './BaseGroup.mjs';\n\n/**\n * TODO: This is a temporary class to support the legacy\n * thennable API\n */\nclass GroupPlaybackControls extends BaseGroupPlaybackControls {\n    then(onResolve, onReject) {\n        return Promise.all(this.animations).then(onResolve).catch(onReject);\n    }\n}\n\nexport { GroupPlaybackControls };\n","function getValueTransition(transition, key) {\n    return transition\n        ? transition[key] ||\n            transition[\"default\"] ||\n            transition\n        : undefined;\n}\n\nexport { getValueTransition };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","function isGenerator(type) {\n    return typeof type === \"function\";\n}\n\nexport { isGenerator };\n","function attachTimeline(animation, timeline) {\n    animation.timeline = timeline;\n    animation.onfinish = null;\n}\n\nexport { attachTimeline };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","/**\n * Add the ability for test suites to manually set support flags\n * to better test more environments.\n */\nconst supportsFlags = {\n    linearEasing: undefined,\n};\n\nexport { supportsFlags };\n","import { memo } from 'motion-utils';\nimport { supportsFlags } from './flags.mjs';\n\nfunction memoSupports(callback, supportsFlag) {\n    const memoized = memo(callback);\n    return () => { var _a; return (_a = supportsFlags[supportsFlag]) !== null && _a !== void 0 ? _a : memoized(); };\n}\n\nexport { memoSupports };\n","import { memoSupports } from './memo.mjs';\n\nconst supportsLinearEasing = /*@__PURE__*/ memoSupports(() => {\n    try {\n        document\n            .createElement(\"div\")\n            .animate({ opacity: 0 }, { easing: \"linear(0, 1)\" });\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}, \"linearEasing\");\n\nexport { supportsLinearEasing };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\n/*#__NO_SIDE_EFFECTS__*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { progress } from 'motion-utils';\n\nconst generateLinearEasing = (easing, duration, // as milliseconds\nresolution = 10 // as milliseconds\n) => {\n    let points = \"\";\n    const numPoints = Math.max(Math.round(duration / resolution), 2);\n    for (let i = 0; i < numPoints; i++) {\n        points += easing(progress(0, numPoints - 1, i)) + \", \";\n    }\n    return `linear(${points.substring(0, points.length - 2)})`;\n};\n\nexport { generateLinearEasing };\n","import { isBezierDefinition } from '../../../utils/is-bezier-definition.mjs';\nimport { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { generateLinearEasing } from './linear.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean((typeof easing === \"function\" && supportsLinearEasing()) ||\n        !easing ||\n        (typeof easing === \"string\" &&\n            (easing in supportedWaapiEasing || supportsLinearEasing())) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: /*@__PURE__*/ cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: /*@__PURE__*/ cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: /*@__PURE__*/ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: /*@__PURE__*/ cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing, duration) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (typeof easing === \"function\" && supportsLinearEasing()) {\n        return generateLinearEasing(easing, duration);\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map((segmentEasing) => mapEasingToNativeEasing(segmentEasing, duration) ||\n            supportedWaapiEasing.easeOut);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const isDragging = {\n    x: false,\n    y: false,\n};\nfunction isDragActive() {\n    return isDragging.x || isDragging.y;\n}\n\nexport { isDragActive, isDragging };\n","import { resolveElements } from '../../utils/resolve-elements.mjs';\n\nfunction setupGesture(elementOrSelector, options) {\n    const elements = resolveElements(elementOrSelector);\n    const gestureAbortController = new AbortController();\n    const eventOptions = {\n        passive: true,\n        ...options,\n        signal: gestureAbortController.signal,\n    };\n    const cancel = () => gestureAbortController.abort();\n    return [elements, eventOptions, cancel];\n}\n\nexport { setupGesture };\n","function resolveElements(elementOrSelector, scope, selectorCache) {\n    var _a;\n    if (elementOrSelector instanceof Element) {\n        return [elementOrSelector];\n    }\n    else if (typeof elementOrSelector === \"string\") {\n        let root = document;\n        if (scope) {\n            // TODO: Refactor to utils package\n            // invariant(\n            //     Boolean(scope.current),\n            //     \"Scope provided, but no element detected.\"\n            // )\n            root = scope.current;\n        }\n        const elements = (_a = selectorCache === null || selectorCache === void 0 ? void 0 : selectorCache[elementOrSelector]) !== null && _a !== void 0 ? _a : root.querySelectorAll(elementOrSelector);\n        return elements ? Array.from(elements) : [];\n    }\n    return Array.from(elementOrSelector);\n}\n\nexport { resolveElements };\n","import { isDragActive } from './drag/state/is-active.mjs';\nimport { setupGesture } from './utils/setup.mjs';\n\n/**\n * Filter out events that are not pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        callback(event);\n    };\n}\n/**\n * Create a hover gesture. hover() is different to .addEventListener(\"pointerenter\")\n * in that it has an easier syntax, filters out polyfilled touch events, interoperates\n * with drag gestures, and automatically removes the \"pointerennd\" event listener when the hover ends.\n *\n * @public\n */\nfunction hover(elementOrSelector, onHoverStart, options = {}) {\n    const [elements, eventOptions, cancel] = setupGesture(elementOrSelector, options);\n    const onPointerEnter = filterEvents((enterEvent) => {\n        const { target } = enterEvent;\n        const onHoverEnd = onHoverStart(enterEvent);\n        if (typeof onHoverEnd !== \"function\" || !target)\n            return;\n        const onPointerLeave = filterEvents((leaveEvent) => {\n            onHoverEnd(leaveEvent);\n            target.removeEventListener(\"pointerleave\", onPointerLeave);\n        });\n        target.addEventListener(\"pointerleave\", onPointerLeave, eventOptions);\n    });\n    elements.forEach((element) => {\n        element.addEventListener(\"pointerenter\", onPointerEnter, eventOptions);\n    });\n    return cancel;\n}\n\nexport { hover };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","const focusableElements = new Set([\n    \"BUTTON\",\n    \"INPUT\",\n    \"SELECT\",\n    \"TEXTAREA\",\n    \"A\",\n]);\nfunction isElementKeyboardAccessible(element) {\n    return (focusableElements.has(element.tagName) ||\n        element.tabIndex !== -1);\n}\n\nexport { isElementKeyboardAccessible };\n","const isPressing = new WeakSet();\n\nexport { isPressing };\n","import { isPressing } from './state.mjs';\n\n/**\n * Filter out events that are not \"Enter\" keys.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.key !== \"Enter\")\n            return;\n        callback(event);\n    };\n}\nfunction firePointerEvent(target, type) {\n    target.dispatchEvent(new PointerEvent(\"pointer\" + type, { isPrimary: true, bubbles: true }));\n}\nconst enableKeyboardPress = (focusEvent, eventOptions) => {\n    const element = focusEvent.currentTarget;\n    if (!element)\n        return;\n    const handleKeydown = filterEvents(() => {\n        if (isPressing.has(element))\n            return;\n        firePointerEvent(element, \"down\");\n        const handleKeyup = filterEvents(() => {\n            firePointerEvent(element, \"up\");\n        });\n        const handleBlur = () => firePointerEvent(element, \"cancel\");\n        element.addEventListener(\"keyup\", handleKeyup, eventOptions);\n        element.addEventListener(\"blur\", handleBlur, eventOptions);\n    });\n    element.addEventListener(\"keydown\", handleKeydown, eventOptions);\n    /**\n     * Add an event listener that fires on blur to remove the keydown events.\n     */\n    element.addEventListener(\"blur\", () => element.removeEventListener(\"keydown\", handleKeydown), eventOptions);\n};\n\nexport { enableKeyboardPress };\n","import { isDragActive } from '../drag/state/is-active.mjs';\nimport { isNodeOrChild } from '../utils/is-node-or-child.mjs';\nimport { isPrimaryPointer } from '../utils/is-primary-pointer.mjs';\nimport { setupGesture } from '../utils/setup.mjs';\nimport { isElementKeyboardAccessible } from './utils/is-keyboard-accessible.mjs';\nimport { enableKeyboardPress } from './utils/keyboard.mjs';\nimport { isPressing } from './utils/state.mjs';\n\n/**\n * Filter out events that are not primary pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction isValidPressEvent(event) {\n    return isPrimaryPointer(event) && !isDragActive();\n}\n/**\n * Create a press gesture.\n *\n * Press is different to `\"pointerdown\"`, `\"pointerup\"` in that it\n * automatically filters out secondary pointer events like right\n * click and multitouch.\n *\n * It also adds accessibility support for keyboards, where\n * an element with a press gesture will receive focus and\n *  trigger on Enter `\"keydown\"` and `\"keyup\"` events.\n *\n * This is different to a browser's `\"click\"` event, which does\n * respond to keyboards but only for the `\"click\"` itself, rather\n * than the press start and end/cancel. The element also needs\n * to be focusable for this to work, whereas a press gesture will\n * make an element focusable by default.\n *\n * @public\n */\nfunction press(elementOrSelector, onPressStart, options = {}) {\n    const [elements, eventOptions, cancelEvents] = setupGesture(elementOrSelector, options);\n    const startPress = (startEvent) => {\n        const element = startEvent.currentTarget;\n        if (!isValidPressEvent(startEvent) || isPressing.has(element))\n            return;\n        isPressing.add(element);\n        const onPressEnd = onPressStart(startEvent);\n        const onPointerEnd = (endEvent, success) => {\n            window.removeEventListener(\"pointerup\", onPointerUp);\n            window.removeEventListener(\"pointercancel\", onPointerCancel);\n            if (!isValidPressEvent(endEvent) || !isPressing.has(element)) {\n                return;\n            }\n            isPressing.delete(element);\n            if (typeof onPressEnd === \"function\") {\n                onPressEnd(endEvent, { success });\n            }\n        };\n        const onPointerUp = (upEvent) => {\n            onPointerEnd(upEvent, options.useGlobalTarget ||\n                isNodeOrChild(element, upEvent.target));\n        };\n        const onPointerCancel = (cancelEvent) => {\n            onPointerEnd(cancelEvent, false);\n        };\n        window.addEventListener(\"pointerup\", onPointerUp, eventOptions);\n        window.addEventListener(\"pointercancel\", onPointerCancel, eventOptions);\n    };\n    elements.forEach((element) => {\n        if (!isElementKeyboardAccessible(element) &&\n            element.getAttribute(\"tabindex\") === null) {\n            element.tabIndex = 0;\n        }\n        const target = options.useGlobalTarget ? window : element;\n        target.addEventListener(\"pointerdown\", startPress, eventOptions);\n        element.addEventListener(\"focus\", (event) => enableKeyboardPress(event, eventOptions), eventOptions);\n    });\n    return cancelEvents;\n}\n\nexport { press };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\n/*#__NO_SIDE_EFFECTS__*/\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n/*#__NO_SIDE_EFFECTS__*/\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","/*#__NO_SIDE_EFFECTS__*/\nconst noop = (any) => any;\n\nexport { noop };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { transformPropOrder } from './keys-transform.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    ...transformPropOrder,\n]);\n\nexport { positionalKeys };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame);\n        return acc;\n    }, {});\n    const { read, resolveKeyframes, update, preRender, render, postRender } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        read.process(state);\n        resolveKeyframes.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            // Clear the frame so no callbacks remain. This is to avoid\n            // memory leaks should this render step not run for a while.\n            thisFrame.clear();\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { noop } from 'motion-utils';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps: frameSteps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, frameSteps };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"11.18.1\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    const willChange = visualElement.getValue(\"willChange\");\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","import { noop } from 'motion-utils';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\n\nexport { sanitize };\n","const floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\n\nexport { floatRegex };\n","const singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\n\nexport { singleColorRegex };\n","import { floatRegex } from '../utils/float-regex.mjs';\nimport { isNullish } from '../utils/is-nullish.mjs';\nimport { singleColorRegex } from '../utils/single-color-regex.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((typeof v === \"string\" &&\n        singleColorRegex.test(v) &&\n        v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (typeof v !== \"string\")\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","function isNullish(v) {\n    return v == null;\n}\n\nexport { isNullish };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { alpha, number } from '../numbers/index.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: /*@__PURE__*/ isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","const createUnitType = (unit) => ({\n    test: (v) => typeof v === \"string\" && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = /*@__PURE__*/ createUnitType(\"deg\");\nconst percent = /*@__PURE__*/ createUnitType(\"%\");\nconst px = /*@__PURE__*/ createUnitType(\"px\");\nconst vh = /*@__PURE__*/ createUnitType(\"vh\");\nconst vw = /*@__PURE__*/ createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return typeof v === \"string\"\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","const colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\n\nexport { colorRegex };\n","import { color } from '../color/index.mjs';\nimport { colorRegex } from '../utils/color-regex.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        typeof v === \"string\" &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst browserNumberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Misc\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n};\n\nexport { browserNumberValueTypes };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { degrees, px, progressPercentage } from '../../../value/types/numbers/units.mjs';\n\nconst transformValueTypes = {\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n};\n\nexport { transformValueTypes };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { alpha } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\nimport { browserNumberValueTypes } from './number-browser.mjs';\nimport { transformValueTypes } from './transform.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    ...browserNumberValueTypes,\n    ...transformValueTypes,\n    zIndex: int,\n    size: px,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\nimport { transformPropOrder } from '../../html/utils/keys-transform.mjs';\n\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/u);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalValues, removeNonTranslationalTransform };\n","import { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    var _a;\n                    (_a = element.getValue(key)) === null || _a === void 0 ? void 0 : _a.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = \n/*@__PURE__*/ checkStringStartsWith(\"--\");\nconst startsAsVariableToken = \n/*@__PURE__*/ checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","import { invariant } from 'motion-utils';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { positionalKeys } from '../html/utils/keys-position.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { isGenerator } from 'motion-dom';\nimport { warning } from 'motion-utils';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return (hasKeyframesChanged(keyframes) ||\n        ((type === \"spring\" || isGenerator(type)) && velocity));\n}\n\nexport { canAnimate };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.hasAttemptedResolve = false;\n        this.createdAt = time.now();\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * This method uses the createdAt and resolvedAt to calculate the\n     * animation startTime. *Ideally*, we would use the createdAt time as t=0\n     * as the following frame would then be the first frame of the animation in\n     * progress, which would feel snappier.\n     *\n     * However, if there's a delay (main thread work) between the creation of\n     * the animation and the first commited frame, we prefer to use resolvedAt\n     * to avoid a sudden jump into the animation.\n     */\n    calcStartTime() {\n        if (!this.resolvedAt)\n            return this.createdAt;\n        return this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n            ? this.resolvedAt\n            : this.createdAt;\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved && !this.hasAttemptedResolve) {\n            flushKeyframeResolvers();\n        }\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        this.resolvedAt = time.now();\n        this.hasAttemptedResolve = true;\n        const { name, type, velocity, delay, onComplete, onUpdate, isGenerator, } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!isGenerator && !canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete === null || onComplete === void 0 ? void 0 : onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    flatten() {\n        this.options.type = \"keyframes\";\n        this.options.ease = \"linear\";\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","import { mixNumber } from './number.mjs';\nimport { warning } from 'motion-utils';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from 'motion-utils';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","const springDefaults = {\n    // Default spring physics\n    stiffness: 100,\n    damping: 10,\n    mass: 1.0,\n    velocity: 0.0,\n    // Default duration/bounce-based options\n    duration: 800, // in ms\n    bounce: 0.3,\n    visualDuration: 0.3, // in seconds\n    // Rest thresholds\n    restSpeed: {\n        granular: 0.01,\n        default: 2,\n    },\n    restDelta: {\n        granular: 0.005,\n        default: 0.5,\n    },\n    // Limits\n    minDuration: 0.01, // in seconds\n    maxDuration: 10.0, // in seconds\n    minDamping: 0.05,\n    maxDamping: 1,\n};\n\nexport { springDefaults };\n","import { warning, secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { springDefaults } from './defaults.mjs';\n\nconst safeMin = 0.001;\nfunction findSpring({ duration = springDefaults.duration, bounce = springDefaults.bounce, velocity = springDefaults.velocity, mass = springDefaults.mass, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(springDefaults.maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(springDefaults.minDamping, springDefaults.maxDamping, dampingRatio);\n    duration = clamp(springDefaults.minDuration, springDefaults.maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: springDefaults.stiffness,\n            damping: springDefaults.damping,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring };\n","import { calcGeneratorDuration, maxGeneratorDuration, generateLinearEasing } from 'motion-dom';\nimport { millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { springDefaults } from './defaults.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: springDefaults.velocity,\n        stiffness: springDefaults.stiffness,\n        damping: springDefaults.damping,\n        mass: springDefaults.mass,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        if (options.visualDuration) {\n            const visualDuration = options.visualDuration;\n            const root = (2 * Math.PI) / (visualDuration * 1.2);\n            const stiffness = root * root;\n            const damping = 2 *\n                clamp(0.05, 1, 1 - (options.bounce || 0)) *\n                Math.sqrt(stiffness);\n            springOptions = {\n                ...springOptions,\n                mass: springDefaults.mass,\n                stiffness,\n                damping,\n            };\n        }\n        else {\n            const derived = findSpring(options);\n            springOptions = {\n                ...springOptions,\n                ...derived,\n                mass: springDefaults.mass,\n            };\n            springOptions.isResolvedFromDuration = true;\n        }\n    }\n    return springOptions;\n}\nfunction spring(optionsOrVisualDuration = springDefaults.visualDuration, bounce = springDefaults.bounce) {\n    const options = typeof optionsOrVisualDuration !== \"object\"\n        ? {\n            visualDuration: optionsOrVisualDuration,\n            keyframes: [0, 1],\n            bounce,\n        }\n        : optionsOrVisualDuration;\n    let { restSpeed, restDelta } = options;\n    const origin = options.keyframes[0];\n    const target = options.keyframes[options.keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale\n        ? springDefaults.restSpeed.granular\n        : springDefaults.restSpeed.default);\n    restDelta || (restDelta = isGranularScale\n        ? springDefaults.restDelta.granular\n        : springDefaults.restDelta.default);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    const generator = {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        toString: () => {\n            const calculatedDuration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n            const easing = generateLinearEasing((progress) => generator.next(calculatedDuration * progress).value, calculatedDuration, 30);\n            return calculatedDuration + \"ms \" + easing;\n        },\n    };\n    return generator;\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","import { isBezierDefinition } from 'motion-dom';\nimport { invariant, noop } from 'motion-utils';\nimport { anticipate } from '../anticipate.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (isBezierDefinition(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { invariant, noop, progress } from 'motion-utils';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix/index.mjs';\nimport { pipe } from './pipe.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && output[0] === output[1])\n        return () => output[1];\n    const isZeroDeltaRange = input[0] === input[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        if (isZeroDeltaRange && v < input[0])\n            return output[0];\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { progress } from 'motion-utils';\nimport { mixNumber } from '../mix/number.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { isGenerator, calcGeneratorDuration } from 'motion-dom';\nimport { invariant, millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        this.state = \"idle\";\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            this.resolver.cancel();\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        const { name, motionValue, element, keyframes } = this.options;\n        const KeyframeResolver$1 = (element === null || element === void 0 ? void 0 : element.KeyframeResolver) || KeyframeResolver;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    flatten() {\n        super.flatten();\n        // If we've already resolved the animation, re-initialise it\n        if (this._resolved) {\n            Object.assign(this._resolved, this.initPlayback(this._resolved.keyframes));\n        }\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = isGenerator(type)\n            ? type\n            : generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            if (process.env.NODE_ENV !== \"production\") {\n                invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n            }\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        }\n        else if (this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n\nexport { acceleratedValues };\n","import { memo } from 'motion-utils';\n\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n\nexport { supportsWaapi };\n","import { supportsLinearEasing, attachTimeline, isGenerator, isWaapiSupportedEasing } from 'motion-dom';\nimport { millisecondsToSeconds, secondsToMilliseconds, noop } from 'motion-utils';\nimport { anticipate } from '../../easing/anticipate.mjs';\nimport { backInOut } from '../../easing/back.mjs';\nimport { circInOut } from '../../easing/circ.mjs';\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { acceleratedValues } from './utils/accelerated-values.mjs';\nimport { startWaapiAnimation } from './waapi/index.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\nimport { supportsWaapi } from './waapi/utils/supports-waapi.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return (isGenerator(options.type) ||\n        options.type === \"spring\" ||\n        !isWaapiSupportedEasing(options.ease));\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n        isGenerator: true,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nconst unsupportedEasingFunctions = {\n    anticipate,\n    backInOut,\n    circInOut,\n};\nfunction isUnsupportedEase(key) {\n    return key in unsupportedEasingFunctions;\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, element, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        var _a;\n        let { duration = 300, times, ease, type, motionValue, name, startTime, } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!((_a = motionValue.owner) === null || _a === void 0 ? void 0 : _a.current)) {\n            return false;\n        }\n        /**\n         * If the user has provided an easing function name that isn't supported\n         * by WAAPI (like \"anticipate\"), we need to provide the corressponding\n         * function. This will later get converted to a linear() easing function.\n         */\n        if (typeof ease === \"string\" &&\n            supportsLinearEasing() &&\n            isUnsupportedEase(ease)) {\n            ease = unsupportedEasingFunctions[ease];\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, element, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            // If this is a very short animation, ensure we have\n            // at least two keyframes to animate between as older browsers\n            // can't animate between a single keyframe.\n            if (keyframes.length === 1) {\n                keyframes[1] = keyframes[0];\n            }\n            duration = pregeneratedAnimation.duration;\n            times = pregeneratedAnimation.times;\n            ease = pregeneratedAnimation.ease;\n            type = \"keyframes\";\n        }\n        const animation = startWaapiAnimation(motionValue.owner.current, name, keyframes, { ...this.options, duration, times, ease });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        if (this.pendingTimeline) {\n            attachTimeline(animation, this.pendingTimeline);\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            times,\n            type,\n            ease,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    get startTime() {\n        const { resolved } = this;\n        if (!resolved)\n            return null;\n        const { animation } = resolved;\n        // Coerce to number as TypeScript incorrectly types this\n        // as CSSNumberish\n        return animation.startTime;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            attachTimeline(animation, timeline);\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes, duration, type, ease, times } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n                duration,\n                type,\n                ease,\n                times,\n                isGenerator: true,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        const { onStop } = this.options;\n        onStop && onStop();\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            motionValue &&\n            motionValue.owner &&\n            motionValue.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !motionValue.owner.getProps().onUpdate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","import { mapEasingToNativeEasing } from 'motion-dom';\n\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease = \"easeInOut\", times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease, duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { startWaapiAnimation };\n","import { transformProps } from '../../render/html/utils/keys-transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { getValueTransition, GroupPlaybackControls } from 'motion-dom';\nimport { secondsToMilliseconds } from 'motion-utils';\nimport { frame } from '../../frameloop/frame.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isTransitionDefined } from '../utils/is-transition-defined.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unqiue transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            // We still want to return some animation controls here rather\n            // than returning undefined\n            return new GroupPlaybackControls([]);\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\n\nexport { isTransitionDefined };\n","import { getValueTransition } from 'motion-dom';\nimport { positionalKeys } from '../../render/html/utils/keys-position.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        addValueToWillChange(visualElement, key);\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && positionalKeys.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nconst numVariantProps = variantProps.length;\nfunction getVariantContext(visualElement) {\n    if (!visualElement)\n        return undefined;\n    if (!visualElement.isControllingVariants) {\n        const context = visualElement.parent\n            ? getVariantContext(visualElement.parent) || {}\n            : {};\n        if (visualElement.props.initial !== undefined) {\n            context.initial = visualElement.props.initial;\n        }\n        return context;\n    }\n    const context = {};\n    for (let i = 0; i < numVariantProps; i++) {\n        const name = variantProps[i];\n        const prop = visualElement.props[name];\n        if (isVariantLabel(prop) || prop === false) {\n            context[name] = prop;\n        }\n    }\n    return context;\n}\n\nexport { getVariantContext };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\nimport { getVariantContext } from './get-variant-context.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const { props } = visualElement;\n        const context = getVariantContext(visualElement.parent) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to skip this animation\n             * unless the inherited variants haven't changed on this render.\n             */\n            const willAnimateViaParent = isInherited && variantDidChange;\n            const needsAnimating = !willAnimateViaParent || handledRemovedValues;\n            if (shouldAnimateType && needsAnimating) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget !== null && fallbackTarget !== void 0 ? fallbackTarget : null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        var _a;\n        this.node.animationState.reset();\n        (_a = this.unmountControls) === null || _a === void 0 ? void 0 : _a.call(this);\n    }\n}\n\nexport { AnimationFeature };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","import { isPrimaryPointer } from 'motion-dom';\n\nfunction extractEventInfo(event) {\n    return {\n        point: {\n            x: event.pageX,\n            y: event.pageY,\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { isPrimaryPointer } from 'motion-dom';\nimport { secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false, } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from 'motion-utils';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/motiondivision/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from 'motion-utils';\nimport { setDragLock } from 'motion-dom';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        this.openDragLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event).point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openDragLock)\n                    this.openDragLock();\n                this.openDragLock = setDragLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openDragLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openDragLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openDragLock) {\n            this.openDragLock();\n            this.openDragLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        addValueToWillChange(this.visualElement, axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { isDragging } from './is-active.mjs';\n\nfunction setDragLock(axis) {\n    if (axis === \"x\" || axis === \"y\") {\n        if (isDragging[axis]) {\n            return null;\n        }\n        else {\n            isDragging[axis] = true;\n            return () => {\n                isDragging[axis] = false;\n            };\n        }\n    }\n    else {\n        if (isDragging.x || isDragging.y) {\n            return null;\n        }\n        else {\n            isDragging.x = isDragging.y = true;\n            return () => {\n                isDragging.x = isDragging.y = false;\n            };\n        }\n    }\n}\n\nexport { setDragLock };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence(subscribe = true) {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => {\n        if (subscribe)\n            register(id);\n    }, [subscribe]);\n    const safeToRemove = useCallback(() => subscribe && onExitComplete && onExitComplete(id), [id, onExitComplete, subscribe]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { secondsToMilliseconds } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\nfunction delayInSeconds(callback, timeout) {\n    return delay(callback, secondsToMilliseconds(timeout));\n}\n\nexport { delay, delayInSeconds };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { progress, noop } from 'motion-utils';\nimport { circOut } from '../../easing/circ.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = /*@__PURE__*/ compress(0, 0.5, circOut);\nconst easeCrossfadeOut = /*@__PURE__*/ compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","import { getValueTransition } from 'motion-dom';\nimport { noop } from 'motion-utils';\nimport { animateSingleValue } from '../../animation/animate/single-value.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { cancelFrame, frameData, frameSteps, frame } from '../../frameloop/frame.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nconst metrics = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nconst isDebug = typeof window !== \"undefined\" && window.MotionDebug !== undefined;\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction cancelTreeOptimisedTransformAnimations(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement)\n        return;\n    const appearId = getOptimisedAppearId(visualElement);\n    if (window.MotionHasOptimisedAnimation(appearId, \"transform\")) {\n        const { layout, layoutId } = projectionNode.options;\n        window.MotionCancelOptimisedAnimation(appearId, \"transform\", frame, !(layout || layoutId));\n    }\n    const { parent } = projectionNode;\n    if (parent && !parent.hasCheckedOptimisedAppear) {\n        cancelTreeOptimisedTransformAnimations(parent);\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (isDebug) {\n                    metrics.totalNodes =\n                        metrics.resolvedTargetDeltas =\n                            metrics.recalculatedProjection =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (isDebug) {\n                    window.MotionDebug.record(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.MotionCancelOptimisedAnimation &&\n                !this.hasCheckedOptimisedAppear) {\n                cancelTreeOptimisedTransformAnimations(this);\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            frameSteps.update.process(frameData);\n            frameSteps.preRender.process(frameData);\n            frameSteps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            var _a;\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            var _a;\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (isDebug) {\n                metrics.resolvedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (isDebug) {\n                metrics.recalculatedProjection++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a;\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (isDebug) {\n        metrics.totalNodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    var _a;\n    return node !== node.root && ((_a = node.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot);\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { animateMotionValue } from '../interfaces/motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = (latestTransform === null || latestTransform === void 0 ? void 0 : latestTransform.z) || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { Feature } from '../motion/features/Feature.mjs';\nimport { hover } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction handleHoverEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileHover) {\n        node.animationState.setActive(\"whileHover\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onHover\" + lifecycle);\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass HoverGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = hover(current, (startEvent) => {\n            handleHoverEvent(this.node, startEvent, \"Start\");\n            return (endEvent) => handleHoverEvent(this.node, endEvent, \"End\");\n        });\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { Feature } from '../motion/features/Feature.mjs';\nimport { press } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction handlePressEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileTap) {\n        node.animationState.setActive(\"whileTap\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onTap\" + (lifecycle === \"End\" ? \"\" : lifecycle));\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass PressGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = press(current, (startEvent) => {\n            handlePressEvent(this.node, startEvent, \"Start\");\n            return (endEvent, { success }) => handlePressEvent(this.node, endEvent, success ? \"End\" : \"Cancel\");\n        }, { useGlobalTarget: this.node.props.globalTapTarget });\n    }\n    unmount() { }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const isBrowser = typeof window !== \"undefined\";\n\nexport { isBrowser };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        if (instance) {\n            visualState.onMount && visualState.onMount(instance);\n        }\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    var _a, _b;\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef(null);\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    const isMounted = useRef(false);\n    useInsertionEffect(() => {\n        /**\n         * Check the component has already mounted before calling\n         * `update` unnecessarily. This ensures we skip the initial update.\n         */\n        if (visualElement && isMounted.current) {\n            visualElement.update(props, presenceContext);\n        }\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\n        !((_a = window.MotionHandoffIsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId)) &&\n        ((_b = window.MotionHasOptimisedAnimation) === null || _b === void 0 ? void 0 : _b.call(window, optimisedAppearId)));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        isMounted.current = true;\n        window.MotionIsMounted = true;\n        visualElement.updateFeatures();\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            // This ensures all future calls to animateChanges() in this component will run in useEffect\n            queueMicrotask(() => {\n                var _a;\n                (_a = window.MotionHandoffMarkAsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId);\n            });\n            wantsHandoff.current = false;\n        }\n    });\n    return visualElement;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","\"use client\";\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { warning, invariant } from 'motion-utils';\nimport { forwardRef, useContext } from 'react';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createRendererMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    var _a, _b;\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    MotionComponent.displayName = `motion.${typeof Component === \"string\"\n        ? Component\n        : `create(${(_b = (_a = Component.displayName) !== null && _a !== void 0 ? _a : Component.name) !== null && _b !== void 0 ? _b : \"\"})`}`;\n    const ForwardRefMotionComponent = forwardRef(MotionComponent);\n    ForwardRefMotionComponent[motionComponentSymbol] = Component;\n    return ForwardRefMotionComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage)\n            : invariant(false, strictMessage);\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: (drag === null || drag === void 0 ? void 0 : drag.isEnabled(props)) || (layout === null || layout === void 0 ? void 0 : layout.isEnabled(props))\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createRendererMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onUpdate, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onUpdate) {\n        /**\n         * onMount works without the VisualElement because it could be\n         * called before the VisualElement payload has been hydrated.\n         * (e.g. if someone is using m components <m.circle />)\n         */\n        state.onMount = (instance) => onUpdate({ props, current: instance, ...state });\n        state.onUpdate = (visualElement) => onUpdate(visualElement);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        for (let i = 0; i < list.length; i++) {\n            const resolved = resolveVariantFromProps(props, list[i]);\n            if (resolved) {\n                const { transitionEnd, transition, ...target } = resolved;\n                for (const key in target) {\n                    let valueTarget = target[key];\n                    if (Array.isArray(valueTarget)) {\n                        /**\n                         * Take final keyframe if the initial animation is blocked because\n                         * we want to initialise at the end of that blocked animation.\n                         */\n                        const index = isInitialAnimationBlocked\n                            ? valueTarget.length - 1\n                            : 0;\n                        valueTarget = valueTarget[index];\n                    }\n                    if (valueTarget !== null) {\n                        values[key] = valueTarget;\n                    }\n                }\n                for (const key in transitionEnd) {\n                    values[key] = transitionEnd[key];\n                }\n            }\n        }\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\nimport { transformPropOrder } from './keys-transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(latestValues, transform, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    let transformIsDefault = true;\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        const value = latestValues[key];\n        if (value === undefined)\n            continue;\n        let valueIsDefault = true;\n        if (typeof value === \"number\") {\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\n        }\n        else {\n            valueIsDefault = parseFloat(value) === 0;\n        }\n        if (!valueIsDefault || transformTemplate) {\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (!valueIsDefault) {\n                transformIsDefault = false;\n                const transformName = translateAlias[key] || key;\n                transformString += `${transformName}(${valueAsType}) `;\n            }\n            if (transformTemplate) {\n                transform[key] = valueAsType;\n            }\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","import { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\nimport { buildTransform } from './build-transform.mjs';\nimport { transformProps } from './keys-transform.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            continue;\n        }\n        else if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        else {\n            // Convert the value to its default value type, ie 0 -> \"0px\"\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (key.startsWith(\"origin\")) {\n                // If this is a transform origin, flag and enable further transform-origin processing\n                hasTransformOrigin = true;\n                transformOrigin[key] =\n                    valueAsType;\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { buildSVGPath } from './path.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/keys-transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    var _a;\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            ((_a = visualElement === null || visualElement === void 0 ? void 0 : visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.liveStyle) !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { transformPropOrder } from '../../html/utils/keys-transform.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { frame } from '../../frameloop/frame.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { transformProps } from '../html/utils/keys-transform.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nfunction updateSVGDimensions(instance, renderState) {\n    try {\n        renderState.dimensions =\n            typeof instance.getBBox === \"function\"\n                ? instance.getBBox()\n                : instance.getBoundingClientRect();\n    }\n    catch (e) {\n        // Most likely trying to measure an unrendered element under Firefox\n        renderState.dimensions = {\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0,\n        };\n    }\n}\nconst layoutProps = [\"x\", \"y\", \"width\", \"height\", \"cx\", \"cy\", \"r\"];\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onUpdate: ({ props, prevProps, current, renderState, latestValues, }) => {\n            if (!current)\n                return;\n            let hasTransform = !!props.drag;\n            if (!hasTransform) {\n                for (const key in latestValues) {\n                    if (transformProps.has(key)) {\n                        hasTransform = true;\n                        break;\n                    }\n                }\n            }\n            if (!hasTransform)\n                return;\n            let needsMeasure = !prevProps;\n            if (prevProps) {\n                /**\n                 * Check the layout props for changes, if any are found we need to\n                 * measure the element again.\n                 */\n                for (let i = 0; i < layoutProps.length; i++) {\n                    const key = layoutProps[i];\n                    if (props[key] !==\n                        prevProps[key]) {\n                        needsMeasure = true;\n                    }\n                }\n            }\n            if (!needsMeasure)\n                return;\n            frame.read(() => {\n                updateSVGDimensions(current, renderState);\n                frame.render(() => {\n                    buildSVGAttrs(renderState, latestValues, isSVGTag(current.tagName), props.transformTemplate);\n                    renderSVG(current, renderState);\n                });\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","import { createRendererMotionComponent } from '../../motion/index.mjs';\nimport { isSVGComponent } from '../dom/utils/is-svg-component.mjs';\nimport { svgMotionConfig } from '../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../html/config-motion.mjs';\nimport { createUseRender } from '../dom/use-render.mjs';\n\nfunction createMotionComponentFactory(preloadedFeatures, createVisualElement) {\n    return function createMotionComponent(Component, { forwardMotionProps } = { forwardMotionProps: false }) {\n        const baseConfig = isSVGComponent(Component)\n            ? svgMotionConfig\n            : htmlMotionConfig;\n        const config = {\n            ...baseConfig,\n            preloadedFeatures,\n            useRender: createUseRender(forwardMotionProps),\n            createVisualElement,\n            Component,\n        };\n        return createRendererMotionComponent(config);\n    };\n}\n\nexport { createMotionComponentFactory };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { transformProps } from './html/utils/keys-transform.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.renderScheduledAt = 0.0;\n        this.scheduleRender = () => {\n            const now = time.now();\n            if (this.renderScheduledAt < now) {\n                this.renderScheduledAt = now;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState, onUpdate } = visualState;\n        this.onUpdate = onUpdate;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n        this.onUpdate && this.onUpdate(this);\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"11.18.1\", `Attempting to mix Motion versions ${nextValue.version} with 11.18.1 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current) {\n                    this.current.textContent = `${latest}`;\n                }\n            });\n        }\n    }\n}\n\nexport { DOMVisualElement };\n","import { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { transformProps } from './utils/keys-transform.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { createBox } from '../../projection/geometry/models.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { transformProps } from '../html/utils/keys-transform.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","import { createDOMMotionComponentProxy } from '../create-proxy.mjs';\nimport { createMotionComponent } from './create.mjs';\n\nconst motion = /*@__PURE__*/ createDOMMotionComponentProxy(createMotionComponent);\n\nexport { motion };\n","import { animations } from '../../../motion/features/animations.mjs';\nimport { drag } from '../../../motion/features/drag.mjs';\nimport { gestureAnimations } from '../../../motion/features/gestures.mjs';\nimport { layout } from '../../../motion/features/layout.mjs';\nimport { createMotionComponentFactory } from '../create-factory.mjs';\nimport { createDomVisualElement } from '../../dom/create-visual-element.mjs';\n\nconst createMotionComponent = /*@__PURE__*/ createMotionComponentFactory({\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n}, createDomVisualElement);\n\nexport { createMotionComponent };\n"],"names":["UPPERCASE","LOWERCASE","LEADING_CAPITAL","IDENTIFIER","SEPARATORS","LEADING_SEPARATORS","RegExp","source","SEPARATORS_AND_IDENTIFIER","NUMBERS_AND_IDENTIFIER","camelCase","input","options","Array","isArray","TypeError","pascalCase","preserveConsecutiveUppercase","map","x","trim","filter","length","join","toLowerCase","locale","string","toLocaleLowerCase","toUpperCase","toLocaleUpperCase","isLastCharLower","isLastCharUpper","isLastLastCharUpper","i","character","test","slice","preserveCamelCase","replace","lastIndex","m1","charAt","_","identifier","m","postProcess","module","exports","W","hasNativeLazyLoadSupport","HTMLImageElement","prototype","z","e","t","a","s","width","height","className","style","P","h","loading","shouldLoad","opacity","A","r","n","o","l","backgroundColor","position","top","left","bottom","right","objectFit","objectPosition","d","transition","H","F","_ref5","layout","paddingTop","maxWidth","display","alt","role","src","G","children","u","V","B","U","srcSet","decoding","Y","fallback","sources","sizes","_ref6","media","type","key","X","propTypes","isRequired","displayName","J","Z","Error","K","Q","ee","te","ae","_len","arguments","_key","c","apply","concat","ie","image","se","re","ne","Set","oe","le","de","as","class","g","onStartLoad","p","onLoad","onError","f","w","y","b","v","E","k","S","M","N","$","JSON","stringify","images","I","then","_ref7","renderImageToString","swapPlaceholderImage","current","querySelector","complete","wasCached","setTimeout","removeAttribute","addEventListener","removeEventListener","add","has","_ref8","innerHTML","isLoading","isLoaded","requestAnimationFrame","cancelAnimationFrame","ref","dangerouslySetInnerHTML","__html","suppressHydrationWarning","ce","he","ue","__imageData","__error","console","warn","ge","imgClassName","imgStyle","placeholder","pe","_len2","_key2","me","fe","we","Header","React","Link","to","StaticImage","quality","require","motion","span","animate","scale","duration","repeat","Infinity","ease","_ref","createDOMMotionComponentProxy","componentFactory","Proxy","componentCache","Map","args","get","_target","set","isAnimationControls","start","isKeyframesTarget","shallowCompare","next","prev","prevLength","isVariantLabel","getValueState","visualElement","state","values","forEach","value","getVelocity","resolveVariantFromProps","props","definition","custom","velocity","undefined","variants","resolveVariant","getProps","variantPriorityOrder","variantProps","memo","callback","result","supportsScrollTimeline","window","ScrollTimeline","constructor","animations","this","stop","runAll","Boolean","finished","Promise","all","animation","getAll","propName","setAll","newValue","attachTimeline","timeline","subscriptions","cancel","time","speed","startTime","max","Math","methodName","controls","flatten","play","pause","GroupPlaybackControls","onResolve","onReject","catch","maxGeneratorDuration","calcGeneratorDuration","generator","done","isGenerator","onfinish","isBezierDefinition","easing","supportsFlags","linearEasing","memoSupports","supportsFlag","memoized","_a","supportsLinearEasing","document","createElement","progress","from","toFromDifference","generateLinearEasing","resolution","points","numPoints","round","substring","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","linear","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","segmentEasing","isDragging","isDragActive","setupGesture","elementOrSelector","elements","scope","selectorCache","Element","root","querySelectorAll","resolveElements","gestureAbortController","AbortController","passive","signal","abort","filterEvents","event","pointerType","isNodeOrChild","parent","child","parentElement","isPrimaryPointer","button","isPrimary","focusableElements","isPressing","WeakSet","firePointerEvent","target","dispatchEvent","PointerEvent","bubbles","isValidPressEvent","press","onPressStart","eventOptions","cancelEvents","startPress","startEvent","element","currentTarget","onPressEnd","onPointerEnd","endEvent","success","onPointerUp","onPointerCancel","delete","upEvent","useGlobalTarget","cancelEvent","tagName","tabIndex","isElementKeyboardAccessible","getAttribute","focusEvent","handleKeydown","handleKeyup","enableKeyboardPress","seconds","millisecondsToSeconds","milliseconds","any","transformPropOrder","transformProps","positionalKeys","MotionGlobalConfig","stepsOrder","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","delta","timestamp","isProcessing","flagRunNextFrame","steps","reduce","acc","thisFrame","nextFrame","flushNextFrame","toKeepAlive","latestFrameData","triggerCallback","step","schedule","keepAlive","immediate","queue","process","frameData","clear","createRenderStep","read","resolveKeyframes","update","preRender","render","postRender","processBatch","performance","now","min","cancelFrame","frameSteps","clearTime","newTime","queueMicrotask","addUniqueItem","arr","item","indexOf","push","removeItem","index","splice","SubscriptionManager","handler","notify","numSubscriptions","getSize","velocityPerSecond","frameDuration","collectMotionValues","MotionValue","init","version","canTrackVelocity","events","updateAndNotify","currentTime","updatedAt","setPrevFrameValue","setCurrent","change","renderRequest","hasAnimated","owner","isNaN","parseFloat","prevFrameValue","prevUpdatedAt","onChange","subscription","on","eventName","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","setWithVelocity","jump","endAnimation","getPrevious","startAnimation","resolve","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","motionValue","setMotionValue","hasValue","getValue","addValue","isMotionValue","addValueToWillChange","willChange","camelToDash","str","optimizedAppearDataAttribute","getOptimisedAppearId","instantAnimationState","calcBezier","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","mirrorEasing","reverseEasing","backInOut","anticipate","pow","sin","acos","circInOut","isZeroValueString","clamp","number","parse","transform","alpha","default","sanitize","floatRegex","singleColorRegex","isColorString","testProp","startsWith","isNullish","Object","hasOwnProperty","call","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","parseInt","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","hsla","hue","saturation","lightness","color","colorRegex","NUMBER_TOKEN","COLOR_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","indexes","var","types","parsedValue","parseComplexValue","createTransformer","numSections","output","convertNumbersToZero","complex","_b","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","name","defaultValue","functionRegex","functions","browserNumberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","maxHeight","padding","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","backgroundPositionX","backgroundPositionY","transformValueTypes","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","transformPerspective","originX","originY","originZ","numberValueTypes","zIndex","size","fillOpacity","strokeOpacity","numOctaves","defaultValueTypes","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","invalidTemplates","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","toResolve","isScheduled","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","resolver","needsMeasurement","elementsToMeasure","transformsToRestore","removedTransforms","removeNonTranslationalTransform","measureInitialState","restore","measureEndState","suspendedScrollY","scrollTo","readAllKeyframes","readKeyframes","KeyframeResolver","unresolvedKeyframes","onComplete","isAsync","isComplete","scheduleResolve","currentValue","finalKeyframe","valueAsRead","readValue","setFinalKeyframe","renderEndStyles","resume","warning","invariant","isNumericalString","checkStringStartsWith","token","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","splitCSSVariableRegex","getVariableValue","depth","exec","token1","token2","parseCSSVariable","resolved","getComputedStyle","getPropertyValue","trimmed","testValueType","dimensionValueTypes","findDimensionValueType","find","DOMKeyframesResolver","super","keyframe","resolveNoneKeyframes","origin","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureViewportBox","measureKeyframe","finalKeyframeIndex","unsetTransformName","unsetTransformValue","isAnimatable","canAnimate","keyframes","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","isNotNull","getFinalKeyframe","repeatType","resolvedKeyframes","BaseAnimation","autoplay","delay","repeatDelay","isStopped","hasAttemptedResolve","createdAt","updateFinishedPromise","calcStartTime","resolvedAt","_resolved","onKeyframesResolved","onUpdate","resolveFinishedPromise","resolvedAnimation","initPlayback","onPostResolved","reject","currentFinishedPromise","mixNumber","hueToRgb","q","mixImmediate","mixLinearColor","fromExpo","expo","sqrt","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","combineFunctions","pipe","transformers","invisibleValues","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","template","originStats","targetStats","mixVisibility","orderedOrigin","pointers","originIndex","originValue","matchOrder","mix","mixer","calcGeneratorVelocity","resolveValue","prevT","springDefaults","granular","safeMin","findSpring","bounce","mass","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","initialGuess","rootIterations","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","keys","some","spring","optionsOrVisualDuration","visualDuration","restSpeed","restDelta","isResolvedFromDuration","springOptions","PI","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","latest","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","easingLookup","easingDefinitionToFunction","x1","y1","x2","y2","interpolate","isClamp","inputLength","isZeroDeltaRange","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","offset","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","convertOffsetToTimes","mapTimeToKeyframe","frameloopDriver","passTimestamp","generators","decay","tween","percentToProgress","MainThreadAnimation","holdTime","cancelTime","playbackSpeed","pendingPlayState","teardown","onStop","KeyframeResolver$1","assign","keyframes$1","generatorFactory","mapPercentToKeyframes","mirroredGenerator","resolvedDuration","totalDuration","tick","sample","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","driver","newSpeed","hasChanged","onPlay","stopDriver","acceleratedValues","supportsWaapi","unsupportedEasingFunctions","AcceleratedAnimation","pregeneratedAnimation","sampleAnimation","pregeneratedKeyframes","pregenerateKeyframes","valueName","keyframeOptions","iterations","direction","startWaapiAnimation","pendingTimeline","playbackRate","playState","sampleTime","supports","HTMLElement","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","animateMotionValue","isHandoff","valueTransition","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","shouldSkip","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","transitionEnd","animationTypeState","animationState","getState","latestValues","valueTarget","MotionHandoffAnimation","appearId","shouldReduceMotion","setTarget","animateVariant","variant","presenceContext","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","sortNodePosition","numVariantProps","getVariantContext","isControllingVariants","context","initial","prop","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createState","isInitialRender","buildResolvedTypeValues","animateChanges","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isActive","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","liveStyle","valueHasChanged","blockInitialAnimation","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setActive","setAnimateFunction","makeAnimator","reset","createTypeState","whileInView","whileHover","whileTap","whileDrag","whileFocus","exit","Feature","node","isMounted","id","updateAnimationControlsSubscription","unmountControls","subscribe","mount","prevAnimate","prevProps","unmount","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","addDomEvent","extractEventInfo","point","pageX","pageY","addPointerEvent","addPointerInfo","PanSession","handlers","transformPagePoint","contextWindow","dragSnapToOrigin","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","isRefObject","calcLength","axis","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","hasTransform","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","translateAxis","transformAxis","axisTranslate","axisScale","axisOrigin","transformBox","instance","topLeft","bottomRight","transformBoxPoints","getBoundingClientRect","getContextWindow","ownerDocument","defaultView","elementDragControls","WeakMap","VisualElementDragControls","openDragLock","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","drag","dragPropagation","onDragStart","resolveConstraints","projection","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","calcOrigin","transformTemplate","updateScroll","updateLayout","addListeners","stopPointerListener","dragListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","createContext","LayoutGroupContext","SwitchLayoutGroupContext","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","scaleCorrectors","microtask","cancelMicrotask","MeasureLayoutWithContext","Component","componentDidMount","layoutGroup","switchLayoutGroup","layoutId","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","remove","deregister","MeasureLayout","useContext","useId","useEffect","useCallback","usePresence","jsx","applyTo","boxShadow","compareByDepth","FlatTree","isDirty","timeout","checkElapsed","resolveMotionValue","unwrappedValue","toValue","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisTransforms","transforms","scaleKey","originKey","sourceAxis","removeAxisDelta","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","metrics","totalNodes","resolvedTargetDeltas","recalculatedProjection","isDebug","MotionDebug","transformAxes","hiddenVisibility","visibility","resetDistortingTransform","sharedAnimationValues","setStaticValue","cancelTreeOptimisedTransformAnimations","projectionNode","hasCheckedOptimisedAppear","MotionHasOptimisedAnimation","MotionCancelOptimisedAnimation","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","record","resolvedRelativeTargetAt","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","layoutScroll","isRoot","wasRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","checkNodeWasScrollRoot","boxWithoutScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","applyTreeDeltas","prevProjectionDelta","createProjectionDeltas","notifyAll","projectionDeltaWithTransform","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","config","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","resetValues","getProjectionStyles","styleProp","styles","pointerEvents","emptyStyles","valuesToRender","latestTransform","xTranslate","yTranslate","zTranslate","elementScaleX","elementScaleY","buildProjectionTransform","transformOrigin","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","navigator","userAgent","includes","roundPoint","maxDistance","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","pan","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","ProjectionNode","handleHoverEvent","lifecycle","handlePressEvent","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","gestureAnimations","inView","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","prevViewport","hasViewportOptionChanged","tap","globalTapTarget","focus","onFocus","isFocusVisible","matches","onBlur","hover","onHoverStart","onPointerEnter","enterEvent","onHoverEnd","onPointerLeave","leaveEvent","LazyContext","strict","MotionConfigContext","isStatic","reducedMotion","MotionContext","isVariantNode","useCreateMotionContext","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","isBrowser","featureProps","featureDefinitions","isEnabled","motionComponentSymbol","Symbol","for","useMotionRef","visualState","externalRef","onMount","useIsomorphicLayoutEffect","useLayoutEffect","useVisualElement","createVisualElement","ProjectionNodeConstructor","lazyContext","reducedMotionConfig","visualElementRef","useRef","renderer","initialLayoutGroupConfig","getClosestProjectingNode","useInsertionEffect","optimisedAppearId","wantsHandoff","MotionHandoffIsComplete","MotionIsMounted","updateFeatures","MotionHandoffMarkAsComplete","allowProjection","createRendererMotionComponent","preloadedFeatures","useRender","useVisualState","MotionComponent","configAndProps","useLayoutId","useStrictMode","layoutProjection","combined","getProjectionFunctionality","jsxs","Provider","features","loadFeatures","ForwardRefMotionComponent","forwardRef","layoutGroupId","lowercaseSVGElements","isSVGComponent","makeUseVisualState","make","scrapeMotionValuesFromProps","createRenderState","makeLatestValues","renderState","makeState","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","list","getValueAsType","translateAlias","numTransforms","buildHTMLStyles","vars","hasTransformOrigin","valueAsType","transformString","transformIsDefault","valueIsDefault","buildTransform","dashKeys","array","camelKeys","buildSVGAttrs","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","isSVGTag","viewBox","attrs","dimensions","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","createHtmlRenderState","createSvgRenderState","tag","renderHTML","setProperty","camelCaseAttributes","renderSVG","_styleProp","setAttribute","isForcedMotionValue","newValues","layoutProps","svgMotionConfig","needsMeasure","getBBox","updateSVGDimensions","htmlMotionConfig","copyRawValuesOnly","useStyle","useInitialMotionValues","useHTMLProps","htmlProps","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","onTap","onTapStart","validMotionProps","isValidMotionProp","shouldForward","isValidProp","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","Fragment","renderedChildren","createMotionComponentFactory","prefersReducedMotion","hasReducedMotionListener","valueTypes","visualElementStore","propEventHandlers","VisualElement","_props","_prevProps","_visualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","renderScheduledAt","baseTarget","initialValues","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","feature","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","removeSyncCheck","MotionCheckAppearSync","other","sortInstanceNodePosition","featureDefinition","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","childSubscription","textContent","HTMLVisualElement","defaultType","computedStyle","SVGVisualElement"],"sourceRoot":""}